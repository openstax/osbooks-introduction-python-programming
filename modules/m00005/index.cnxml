<document xmlns="http://cnx.rice.edu/cnxml">
  <title>String basics</title>
  <metadata xmlns:md="http://cnx.rice.edu/mdml">
    <md:title>String basics</md:title>
    <md:content-id>m00005</md:content-id>
    <md:uuid>f60a5f74-d8c0-4637-beea-f5b3aca54605</md:uuid>
  </metadata>
  <content>
<section id="sect-00001">
<title>Learning objectives</title>
<para id="para-00021">By the end of this section you should be able to</para>
<list id="list-00001">
<item>Use the built-in <code class="python inline-code" lang="python">len()</code> function to get a string's length.</item>
<item>Concatenate string literals and variables using the + operator.</item>

</list>
</section>
<section id="sect-00002">
<title>Quote marks</title>
<para id="para-00001">A string is a sequence of characters enclosed by matching single (') or double (") quotes. Ex: <code class="python inline-code" lang="python">"Happy birthday!"</code> and <code class="python inline-code" lang="python">'21'</code> are both strings.</para>
<para id="para-00002">To include a single quote (') in a string, enclose the string with matching double quotes ("). Ex: <code class="python inline-code" lang="python">"Won't this work?"</code> To include a double quote ("), enclose the string with matching single quotes ('). Ex: <code class="python inline-code" lang="python">'They said "Try it!", so I did'</code>.</para>
<table summary=" " id="table-00001">
<title>Rules for strings</title>
<tgroup cols="2">
<thead>
<row>
<entry>Valid string</entry>
<entry>Invalid string</entry>
</row>
</thead>
<tbody>
<row>
<entry><code class="python inline-code" lang="python">"17" or '17'</code></entry>
<entry><code class="python inline-code" lang="python">17</code></entry>
</row>
<row>
<entry><code class="python inline-code" lang="python">"seventeen" or 'seventeen'</code></entry>
<entry><code class="python inline-code" lang="python">seventeen</code></entry>
</row>
<row>
<entry><code class="python inline-code" lang="python">"Where?" or 'Where?'</code></entry>
<entry><code class="python inline-code" lang="python">"Where?'</code></entry>
</row>
<row>
<entry><code class="python inline-code" lang="python">"I hope you aren't sad."</code></entry>
<entry><code class="python inline-code" lang="python">'I hope you aren't sad.'</code></entry>
</row>
<row>
<entry><code class="python inline-code" lang="python">'The teacher said "Correct!" '</code></entry>
<entry><code class="python inline-code" lang="python">"The teacher said "Correct!" "</code></entry>
</row>
</tbody>
</tgroup>
<caption/>
</table>
<note class="learning-questions" id="note-00001">
<title>Valid and invalid strings</title>
<exercise id="exer-00001">
<problem id="prob-00001">
<para id="para-00003"><link class="os-embed" url="#exercise/CPL-ch01-m04-p01"/></para>
</problem>
</exercise>
<exercise id="exer-00002">
<problem id="prob-00002">
<para id="para-00004"><link class="os-embed" url="#exercise/CPL-ch01-m04-p02"/></para>
</problem>
</exercise>
<exercise id="exer-00003">
<problem id="prob-00003">
<para id="para-00005"><link class="os-embed" url="#exercise/CPL-ch01-m04-p03"/></para>
</problem>
</exercise>
<exercise id="exer-00004">
<problem id="prob-00004">
<para id="para-00006"><link class="os-embed" url="#exercise/CPL-ch01-m04-p04"/></para>
</problem>
</exercise>
</note>
</section>
<section id="sect-00103">
  <title>len() function</title>
  <para id="para-00107">A common operation on a string object is to get the string length, or the number of characters in the string. The <term id="term-00001">len()</term> function, when called on a string value, returns the string length.</para>
  
  <note class="guided-slides" id="note-00102">
    <title>Using len() to get the length of a string</title>
    <media alt="get_the_length_of_a_string">
    <iframe width="660" height="371.4" src="https://www.openstax.org/r/length-of-string"/>
    </media>
    </note>
    <note class="learning-questions" id="note-00103">
    <title>Applying len() function to string values</title>
    <exercise id="exer-00105">
    <problem id="prob-00105">
    <para id="para-00108"><link class="os-embed" url="#exercise/CPL-ch01-m04-p105"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00106">
    <problem id="prob-00106">
    <para id="para-00109"><link class="os-embed" url="#exercise/CPL-ch01-m04-p106"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00107">
    <problem id="prob-00107">
    <para id="para-00110"><link class="os-embed" url="#exercise/CPL-ch01-m04-p107"/></para>
    </problem>
    </exercise>
    
    </note>
</section>
<section id="sect-00003">
<title>Concatenation</title>
<para id="para-00007">Concatenation is an operation that combines two or more strings sequentially with the concatenation operator (+). Ex: <code class="python" lang="python">"A"</code> + <code class="python" lang="python">"part"</code> produces the string <code class="python" lang="python">"Apart"</code>.</para>
<note class="guided-slides" id="note-00002">
<title>Concatenating multiple strings</title>
<media alt="concatenating_strings_slides">
<iframe width="660" height="371.4" src="https://www.openstax.org/r/concatenating-strings"/>
</media>
</note>
<note class="learning-questions" id="note-00003">
<title>String concatenation</title>
<exercise id="exer-00005">
<problem id="prob-00005">
<para id="para-00008"><link class="os-embed" url="#exercise/CPL-ch01-m04-p05"/></para>
</problem>
</exercise>
<exercise id="exer-00006">
<problem id="prob-00006">
<para id="para-00009"><link class="os-embed" url="#exercise/CPL-ch01-m04-p06"/></para>
</problem>
</exercise>
<exercise id="exer-00007">
<problem id="prob-00007">
<para id="para-00010"><link class="os-embed" url="#exercise/CPL-ch01-m04-p07"/></para>
</problem>
</exercise>
<exercise id="exer-00008">
<problem id="prob-00008">
<para id="para-00011"><link class="os-embed" url="#exercise/CPL-ch01-m04-p08"/></para>
</problem>
</exercise>
</note>
</section>

<note class="practice-program" id="note-00005">
  <title>Name length</title>
  <para id="para-00019">Write a program that asks the user to input their first and last name separately. Use the following prompts (example input in bold):</para>
  <code class="python" lang="python">
  What is your first name? Alan
  What is your last name? Turing
  </code> 
  <para id="para-00020">The program should then output the length of each name. Based on the example input above, the output would be:  </para> 
  <code class="python" lang="python">
  Your first name is 4 letters long
  Your last name is 6 letters long
  </code> 
  
  <media alt="name_length_program">
  <iframe width="660" height="371.4" src="../../media/interactive/coderunner/ch1/CodeRunner_01_05_06_Name-length.html"/>
  </media>
  </note>


<note class="practice-program" id="note-00006">
<title>Punctuation</title>
<para id="para-00018">Write a Python computer program that
<list id="list-00002">
<item>assigns the string <code class="python" lang="python">"Freda"</code> to a variable, <code class="python" lang="python">name</code></item>
<item>assigns the string <code class="python" lang="python">"happy"</code> to a variable, <code class="python" lang="python">feel</code></item>
<item>prints the string <code class="python" lang="python">"Hi Freda!"</code> with a single <code class="python" lang="python">print()</code> function using the variable, <code class="python" lang="python">name</code></item>
<item>prints the string <code class="python" lang="python">"I'm glad you feel happy."</code> with a single <code class="python" lang="python">print()</code> function using the variable, <code class="python" lang="python">feel</code></item>
</list></para>
<media alt="punctuation_program">
<iframe width="660" height="371.4" src="../../media/interactive/coderunner/ch1/CodeRunner_01_05_05_Punctuation.html"/>
</media>
</note>


</content>
</document>