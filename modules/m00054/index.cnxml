<document xmlns="http://cnx.rice.edu/cnxml">
  <title>Top-level code</title>
  <metadata xmlns:md="http://cnx.rice.edu/mdml">
    <md:title>Top-level code</md:title>
    <md:content-id>m00054</md:content-id>
    <md:uuid>9ee0b4e7-fac5-4b41-a81a-6580b6566447</md:uuid>
  </metadata>
  <content>
    <section id="sect-00001">
    <title>Learning objectives</title>
    <para id="para-00001">By the end of this section you should be able to</para>
    <list id="list-00001">
    <item>Identify code that will run as a side effect of importing.</item>
    <item>Explain the purpose of <code class="python inline-code" lang="python">if __name__ == "__main__"</code>.</item>
    </list>
    </section>
    <section id="sect-00002">
    <title>Side effects</title>
    <para id="para-00002">Modules define functions and constants to be used in other programs. When importing a module, <emphasis effect="italics">all</emphasis> code in the module is run from top to bottom. If a module is not designed carefully, unintended code might run as a side effect. The unintended code is generally at the top level, outside of function definitions.</para>
    <note class="guided-slides" id="note-00001">
    <title>Sphere test code</title>
    <media alt="sphere_test_slides">
    <iframe width="660" height="371.4" src="https://www.openstax.org/r/sphere-test"/>
    </media>
    </note>
    <note class="learning-questions" id="note-00002">
    <title>Side effects</title>
    <exercise id="exer-00001">
    <problem id="prob-00001">
    <para id="para-00003"><link class="os-embed" url="{INTERACTIVES_ROOT}/CPL-ch07-m03-p01"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00002">
    <problem id="prob-00002">
    <para id="para-00004"><link class="os-embed" url="{INTERACTIVES_ROOT}/CPL-ch07-m03-p02"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00003">
    <problem id="prob-00003">
    <para id="para-00005"><link class="os-embed" url="{INTERACTIVES_ROOT}/CPL-ch07-m03-p03"/></para>
    </problem>
    </exercise>
    </note>
    </section>
    <section id="sect-00003">
    <title>Using __name__</title>
    <para id="para-00006">Python modules often include the statement <code class="python inline-code" lang="python">if __name__ == "__main__"</code> to prevent side effects. This statement is true when the module is run as a program and false when the module is imported.</para>
    <note class="guided-slides" id="note-00003">
    <title>The main module</title>
    <media alt="main_module_slides">
    <iframe width="660" height="371.4" src="https://www.openstax.org/r/main-module"/>
    </media>
    </note>
    <note class="learning-questions" id="note-00004">
    <title>Using __name__</title>
    <exercise id="exer-00004">
    <problem id="prob-00004">
    <para id="para-00007"><link class="os-embed" url="{INTERACTIVES_ROOT}/CPL-ch07-m03-p04"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00005">
    <problem id="prob-00005">
    <para id="para-00008"><link class="os-embed" url="{INTERACTIVES_ROOT}/CPL-ch07-m03-p05"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00006">
    <problem id="prob-00006">
    <para id="para-00009"><link class="os-embed" url="{INTERACTIVES_ROOT}/CPL-ch07-m03-p06"/></para>
    </problem>
    </exercise>
    </note>
    <note id="note-00005">
    <title>Exploring further</title>
    <para id="para-00010">Variables that begin and end with double underscores have special meaning in Python. Double underscores are informally called "dunder" or "magic" variables. Other examples include <code class="python inline-code" lang="python">__doc__</code> (the module's docstring) and <code class="python inline-code" lang="python">__file__</code> (the module's filename).</para>
    </note>
    </section>

    <note class="practice-program" id="note-00006">
    <title>Side effects</title>
    <para id="para-00011">This exercise is a continuation of the "Missing imports" exercise. Previously, you added missing import statements to the top of the program. Now, modify the program to prevent side effects when importing the program as a module:</para>
    <list list-type="enumerated" id="list-00002">
    <item>Add <code class="python inline-code" lang="python">if __name__ == "__main__"</code> at the end.</item>
    <item>Move all test code under that <code class="python inline-code" lang="python">if</code> statement.</item>
    </list>
    <para id="para-00012">The program should run without errors and produce the same output as before.</para>
    <media alt="side_effects_program">
    <iframe width="660" height="371.4" src="../../media/interactive//coderunner/ch7/CodeRunner_07_04_05_Side-effects.html"/>
    </media>
    </note>
    <note class="practice-program" id="note-00007">
    <title>Conversion test</title>
    <para id="para-00013">This exercise is a continuation of the "Conversion module" exercise. Previously, you wrote the functions <code class="python inline-code" lang="python">cel2fah</code>, <code class="python inline-code" lang="python">fah2cel</code>, <code class="python inline-code" lang="python">km2mi</code>, and <code class="python inline-code" lang="python">mi2km</code>. Write test code at the end of <emphasis effect="italics">conversion.py</emphasis> (the original file) for each of these functions. The test code must not run as a side effect when <code class="python inline-code" lang="python">conversion</code> is imported by other programs. When running <emphasis effect="italics">conversion.py</emphasis> as the main program, the test output should be:</para>
    <code class="python" lang="python">
    0 C is 32 F
    5 C is 41 F
    10 C is 50 F
    15 C is 59 F
    20 C is 68 F

    20 F is -7 C
    25 F is -4 C
    30 F is -1 C
    35 F is 2 C
    40 F is 4 C
    
    1 km is 0.6 mi
    2 km is 1.2 mi
    3 km is 1.9 mi
    4 km is 2.5 mi
    5 km is 3.1 mi
    
    5 mi is 8.0 km
    6 mi is 9.7 km
    7 mi is 11.3 km
    8 mi is 12.9 km
    9 mi is 14.5 km
    </code>
    <media alt="conversion_test_program">
    <iframe width="660" height="371.4" src="../../media/interactive//coderunner/ch7/CodeRunner_07_04_06_Conversion-test.html"/>
    </media>
    </note>
    </content>
</document>