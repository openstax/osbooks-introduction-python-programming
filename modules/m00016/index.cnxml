<document xmlns="http://cnx.rice.edu/cnxml" xmlns:m="http://www.w3.org/1998/Math/MathML">
  <title>The math module</title>
  <metadata xmlns:md="http://cnx.rice.edu/mdml">
    <md:title>The math module</md:title>
    <md:content-id>m00016</md:content-id>
    <md:uuid>75ea8629-0c7c-48cb-99e8-5c29b9ff15eb</md:uuid>
  </metadata>
  <content>
    <section id="sect-00001">
    <title>Learning objectives</title>
    <para id="para-00001">By the end of this section you should be able to</para>
    <list id="list-00001">
    <item>Distinguish between built-in functions and math functions.</item>
    <item>Use functions and constants defined in the math module.</item>
    </list>
    </section>
    <section id="sect-00002">
    <title>Importing modules</title>
    <para id="para-00002">Python comes with an extensive <link url="https://openstax.org/r/100pythlibrary">standard library</link> of modules. A <term id="term-00001">module</term> is previously written code that can be imported in a program. The <term id="term-00002">import statement</term> defines a variable for accessing code in a module. Import statements often appear at the beginning of a program.</para>
    <para id="para-00003">The standard library also defines built-in functions such as <code class="python inline-code" lang="python">print()</code>, <code class="python inline-code" lang="python">input()</code>, and <code class="python inline-code" lang="python">float()</code>. A <term id="term-00003">built-in function</term> is always available and does not need to be imported. The complete <link url="https://openstax.org/r/100builtin">list of built-in functions</link> is available in Python's official documentation.</para>
    <para id="para-00004">A commonly used module in the standard library is the <link url="https://openstax.org/r/100mathmodule">math module</link>. This module defines functions such as <code class="python inline-code" lang="python">sqrt()</code> (square root). To call <code class="python inline-code" lang="python">sqrt()</code>, a program must <code class="python inline-code" lang="python">import math</code> and use the resulting <code class="python inline-code" lang="python">math</code> variable followed by a dot. Ex: <code class="python inline-code" lang="python">math.sqrt(25)</code> evaluates to <code class="python inline-code" lang="python">5.0</code>.</para>
    <para id="para-00005">The following program imports and uses the math module, and uses built-in functions for input and output.</para>
    <example id="exam-00001">
    <title>Calculating the distance between two points</title>
    <code class="python" lang="python">
    import math
    
    x1 = float(input("Enter x1: "))
    y1 = float(input("Enter y1: "))
    x2 = float(input("Enter x2: "))
    y2 = float(input("Enter y2: "))
    
    distance = math.sqrt((x2-x1)**2 + (y2-y1)**2)
    print("The distance is", distance)
    </code>
    </example>
    <note class="guided-slides" id="note-00001">
    <title>Importing math in a Python shell</title>
    <media alt="importing_math_slides">
    <iframe width="660" height="371.4" src="https://www.openstax.org/r/importing-math"/>
    </media>
    </note>
    <note class="learning-questions" id="note-00002">
    <title>Built-in functions and math module</title>
    <exercise id="exer-00001">
    <problem id="prob-00001">
    <para id="para-00006"><link class="os-embed" url="#exercise/CPL-ch02-m06-p01"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00002">
    <problem id="prob-00002">
    <para id="para-00007"><link class="os-embed" url="#exercise/CPL-ch02-m06-p02"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00003">
    <problem id="prob-00003">
    <para id="para-00008"><link class="os-embed" url="#exercise/CPL-ch02-m06-p03"/></para>
    </problem>
    </exercise>
    </note>
    </section>
    <section id="sect-00003">
    <title>Mathematical functions</title>
    <para id="para-00009">Commonly used math functions and constants are shown below. The complete <link url="https://openstax.org/r/100mathmodule">math module listing</link> is available in Python's official documentation.</para>
    <table summary=" " id="table-00001">
    <title>Example constants in the math module.</title>
    <tgroup cols="3">
    <thead>
    <row>
    <entry>Constant</entry>
    <entry>Value</entry>
    <entry>Description</entry>
    </row>
    </thead>
    <tbody>
    <row>
    <entry><para id="para-00016"><code class="python inline-code" lang="python">math.e</code></para></entry>
    <entry><m:math><m:mrow><m:mi>e</m:mi><m:mo>=</m:mo><m:mn>2.71828</m:mn><m:mo>…</m:mo></m:mrow></m:math></entry>
    <entry>Euler's number: the base of the natural logarithm.</entry>
    </row>
    <row>
    <entry><para id="para-00017"><code class="python inline-code" lang="python">math.pi</code></para></entry>
    <entry><m:math><m:mrow><m:mi>π</m:mi><m:mo>=</m:mo><m:mn>3.14159</m:mn><m:mo>…</m:mo></m:mrow></m:math></entry>
    <entry>The ratio of the circumference to the diameter of a circle.</entry>
    </row>
    <row>
    <entry><para id="para-00018"><code class="python inline-code" lang="python">math.tau</code></para></entry>
    <entry><m:math><m:mrow><m:mi>τ</m:mi><m:mo>=</m:mo><m:mn>6.28318</m:mn><m:mo>…</m:mo></m:mrow></m:math></entry>
    <entry>The ratio of the circumference to the radius of a circle.
    Tau is equal to 2π.</entry>
    </row>
    </tbody>
    </tgroup>
    </table>
    <table summary=" " id="table-00002">
    <title>Example functions in the math module.</title>
    <tgroup cols="3">
    <colspec colnum="1" colname="c1"/>
    <colspec colnum="2" colname="c2"/>
    <colspec colnum="3" colname="c3"/>
    <thead>
    <row>
    <entry>Function</entry>
    <entry>Description</entry>
    <entry>Examples</entry>
    </row>
    </thead>
    <tbody>
    <row>
    <entry namest="c1" nameend="c3"><emphasis effect="bold">Number-theoretic</emphasis></entry>
    </row>
    <row>
    <entry><para id="para-00019"><code class="python inline-code" lang="python">math.ceil(x)</code></para></entry>
    <entry><para id="para-00020">The ceiling of <code class="python inline-code" lang="python">x</code>: the smallest integer greater than or equal to <code class="python inline-code" lang="python">x</code>.</para></entry>
    <entry><para id="para-0020"><code class="python inline-code" lang="python">math.ceil(7.4)</code> <m:math><m:mo>→</m:mo></m:math> <code class="python inline-code" lang="python">8</code><newline/>
    <code class="python inline-code" lang="python">math.ceil(-7.4)</code> <m:math><m:mo>→</m:mo></m:math> <code class="python inline-code" lang="python">-7</code></para></entry>
    </row>
    <row>
    <entry><para id="para-00021"><code class="python inline-code" lang="python">math.floor(x)</code></para></entry>
    <entry><para id="para-0021">The floor of <code class="python inline-code" lang="python">x</code>: the largest integer less than or equal to <code class="python inline-code" lang="python">x</code>.</para></entry>
    <entry><para id="para-00022"><code class="python inline-code" lang="python">math.floor(7.4)</code> <m:math><m:mo>→</m:mo></m:math> <code class="python inline-code" lang="python">7</code><newline/>
    <code class="python inline-code" lang="python">math.floor(-7.4)</code> <m:math><m:mo>→</m:mo></m:math> <code class="python inline-code" lang="python">-8</code></para></entry>
    </row>
    <row>
    <entry namest="c1" nameend="c3"><emphasis effect="bold">Power and logarithmic</emphasis></entry>
    </row>
    <row>
    <entry><para id="para-00023"><code class="python inline-code" lang="python">math.log(x)</code></para></entry>
    <entry><para id="para-0023">The natural logarithm of <code class="python inline-code" lang="python">x</code> (to base e).</para></entry>
    <entry><para id="para-00024"><code class="python inline-code" lang="python">math.log(math.e)</code> <m:math><m:mo>→</m:mo></m:math> <code class="python inline-code" lang="python">1.0</code><newline/>
    <code class="python inline-code" lang="python">math.log(0)</code> <m:math><m:mo>→</m:mo></m:math> <code class="python inline-code" lang="python">ValueError: math domain error</code></para></entry>
    </row>
    <row>
    <entry><para id="para-00025"><code class="python inline-code" lang="python">math.log(x, base)</code></para></entry>
    <entry><para id="para-0024">The logarithm of <code class="python inline-code" lang="python">x</code> to the given base.</para></entry>
    <entry><para id="para-00026"><code class="python inline-code" lang="python">math.log(8, 2)</code> <m:math><m:mo>→</m:mo></m:math> <code class="python inline-code" lang="python">3.0</code><newline/>
    <code class="python inline-code" lang="python">math.log(10000, 10)</code> <m:math><m:mo>→</m:mo></m:math> <code class="python inline-code" lang="python">4.0</code></para></entry>
    </row>
    <row>
    <entry><para id="para-00027"><code class="python inline-code" lang="python">math.pow(x, y)</code></para></entry>
    <entry><para id="para-00028"><code class="python inline-code" lang="python">x</code> raised to the power <code class="python inline-code" lang="python">y</code>. Unlike the <code class="python inline-code" lang="python">**</code> operator, <code class="python inline-code" lang="python">math.pow()</code> converts <code class="python inline-code" lang="python">x</code> and <code class="python inline-code" lang="python">y</code> to type float.</para></entry>
    <entry><para id="para-00029"><code class="python inline-code" lang="python">math.pow(3, 0)</code> <m:math><m:mo>→</m:mo></m:math> <code class="python inline-code" lang="python">1.0</code><newline/>
    <code class="python inline-code" lang="python">math.pow(3, 3)</code> <m:math><m:mo>→</m:mo></m:math> <code class="python inline-code" lang="python">27.0</code></para></entry>
    </row>
    <row>
    <entry><para id="para-00030"><code class="python inline-code" lang="python">math.sqrt(x)</code></para></entry>
    <entry><para id="para-0025">The square root of <code class="python inline-code" lang="python">x</code>.</para></entry>
    <entry><para id="para-00031"><code class="python inline-code" lang="python">math.sqrt(9)</code> <m:math><m:mo>→</m:mo></m:math> <code class="python inline-code" lang="python">3.0</code><newline/>
    <code class="python inline-code" lang="python">math.sqrt(-9)</code> <m:math><m:mo>→</m:mo></m:math> <code class="python inline-code" lang="python">ValueError: math domain error</code></para></entry>
    </row>
    <row>
    <entry namest="c1" nameend="c3"><emphasis effect="bold">Trigonometric</emphasis></entry>
    </row>
    <row>
    <entry><para id="para-00032"><code class="python inline-code" lang="python">math.cos(x)</code></para></entry>
    <entry><para id="para-0026">The cosine of <code class="python inline-code" lang="python">x</code> radians.</para></entry>
    <entry><para id="para-00033"><code class="python inline-code" lang="python">math.cos(0)</code> <m:math><m:mo>→</m:mo></m:math> <code class="python inline-code" lang="python">1.0</code><newline/>
    <code class="python inline-code" lang="python">math.cos(math.pi)</code> <m:math><m:mo>→</m:mo></m:math> <code class="python inline-code" lang="python">-1.0</code></para></entry>
    </row>
    <row>
    <entry><para id="para-00034"><code class="python inline-code" lang="python">math.sin(x)</code></para></entry>
    <entry><para id="para-0027">The sine of <code class="python inline-code" lang="python">x</code> radians.</para></entry>
    <entry><para id="para-00035"><code class="python inline-code" lang="python">math.sin(0)</code> <m:math><m:mo>→</m:mo></m:math> <code class="python inline-code" lang="python">0.0</code><newline/>
    <code class="python inline-code" lang="python">math.sin(math.pi/2)</code> <m:math><m:mo>→</m:mo></m:math> <code class="python inline-code" lang="python">1.0</code></para></entry>
    </row>
    <row>
    <entry><para id="para-00036"><code class="python inline-code" lang="python">math.tan(x)</code></para></entry>
    <entry><para id="para-0028">The tangent of <code class="python inline-code" lang="python">x</code> radians.</para></entry>
    <entry><para id="para-00037"><code class="python inline-code" lang="python">math.tan(0)</code> <m:math><m:mo>→</m:mo></m:math> <code class="python inline-code" lang="python">0.0</code><newline/>
    <code class="python inline-code" lang="python">math.tan(math.pi/4)</code> <m:math><m:mo>→</m:mo></m:math> <code class="python inline-code" lang="python">0.999</code><newline/>
    (Round-off error; the result should be 1.0.)</para></entry>
    </row>
    </tbody>
    </tgroup>
    </table>
    <note class="learning-questions" id="note-00003">
    <title>Using math functions and constants</title>
    <exercise id="exer-00004">
    <problem id="prob-00004">
    <para id="para-00010"><link class="os-embed" url="#exercise/CPL-ch02-m06-p04"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00005">
    <problem id="prob-00005">
    <para id="para-00011"><link class="os-embed" url="#exercise/CPL-ch02-m06-p05"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00006">
    <problem id="prob-00006">
    <para id="para-00012"><link class="os-embed" url="#exercise/CPL-ch02-m06-p06"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00007">
    <problem id="prob-00007">
    <para id="para-00013"><link class="os-embed" url="#exercise/CPL-ch02-m06-p07"/></para>
    </problem>
    </exercise>
    </note>
    </section>

    <note class="practice-program" id="note-00004">
    <title>Quadratic formula</title>
    <para id="para-00014">In algebra, a quadratic equation is written as <m:math><m:mrow><m:mi>a</m:mi><m:msup><m:mi>x</m:mi><m:mn>2</m:mn></m:msup><m:mo>+</m:mo><m:mi>b</m:mi><m:mi>x</m:mi><m:mo>+</m:mo><m:mi>c</m:mi><m:mo>=</m:mo><m:mn>0</m:mn></m:mrow></m:math>.
      The coefficients <emphasis effect="italics">a</emphasis>, <emphasis effect="italics">b</emphasis>, and <emphasis effect="italics">c</emphasis> are known values.
      The variable <emphasis effect="italics">x</emphasis> represents an unknown value.
      Ex: <m:math><m:mrow><m:mn>2</m:mn><m:msup><m:mi>x</m:mi><m:mn>2</m:mn></m:msup><m:mo>+</m:mo><m:mn>3</m:mn><m:mi>x</m:mi><m:mo>−</m:mo><m:mn>5</m:mn><m:mo>=</m:mo><m:mn>0</m:mn></m:mrow></m:math> has the coefficients <m:math><m:mrow><m:mi>a</m:mi><m:mo>=</m:mo><m:mtext>2</m:mtext></m:mrow></m:math>, <m:math><m:mrow><m:mi>b</m:mi><m:mo>=</m:mo><m:mtext>3</m:mtext></m:mrow></m:math>, and <m:math><m:mrow><m:mi>c</m:mi><m:mo>=</m:mo><m:mo>−</m:mo><m:mtext>5</m:mtext></m:mrow></m:math>.
      The quadratic formula provides a quick and easy way to solve a quadratic equation for <emphasis effect="italics">x</emphasis>:<newline/><newline/>
      <equation id="eq-00001">
<m:math>
<m:mrow>
<m:mi>x</m:mi><m:mo>=</m:mo><m:mfrac>
<m:mrow>
<m:mo>−</m:mo><m:mi>b</m:mi><m:mo>±</m:mo><m:msqrt>
<m:mrow>
<m:msup>
<m:mi>b</m:mi>
<m:mn>2</m:mn>
</m:msup>
<m:mo>−</m:mo><m:mn>4</m:mn><m:mi>a</m:mi><m:mi>c</m:mi></m:mrow>
</m:msqrt>
</m:mrow>
<m:mrow>
<m:mn>2</m:mn><m:mi>a</m:mi></m:mrow>
</m:mfrac>
</m:mrow>
</m:math>
</equation><newline/><newline/>
      The plus-minus symbol indicates the equation has two solutions.
      However, Python does not have a plus-minus operator.
      To use this formula in Python, the formula must be separated: <newline/><newline/>
      <equation id="eq-00002"><m:math>
<m:mrow>
<m:msub>
<m:mi>x</m:mi>
<m:mn>1</m:mn>
</m:msub>
<m:mo>=</m:mo><m:mfrac>
<m:mrow>
<m:mo>−</m:mo><m:mi>b</m:mi><m:mo>+</m:mo><m:msqrt>
<m:mrow>
<m:msup>
<m:mi>b</m:mi>
<m:mn>2</m:mn>
</m:msup>
<m:mo>−</m:mo><m:mn>4</m:mn><m:mi>a</m:mi><m:mi>c</m:mi></m:mrow>
</m:msqrt>
</m:mrow>
<m:mrow>
<m:mn>2</m:mn><m:mi>a</m:mi></m:mrow>
</m:mfrac>
</m:mrow>
</m:math></equation>
      <equation id="eq-00003"><m:math>
<m:mrow>
<m:msub>
<m:mi>x</m:mi>
<m:mn>2</m:mn>
</m:msub>
<m:mo>=</m:mo><m:mfrac>
<m:mrow>
<m:mo>−</m:mo><m:mi>b</m:mi><m:mo>−</m:mo><m:msqrt>
<m:mrow>
<m:msup>
<m:mi>b</m:mi>
<m:mn>2</m:mn>
</m:msup>
<m:mo>−</m:mo><m:mn>4</m:mn><m:mi>a</m:mi><m:mi>c</m:mi></m:mrow>
</m:msqrt>
</m:mrow>
<m:mrow>
<m:mn>2</m:mn><m:mi>a</m:mi></m:mrow>
</m:mfrac>
</m:mrow>
</m:math></equation><newline/><newline/>
      Write the code for the quadratic formula in the program below.
      Test your program using the following values for <emphasis effect="italics">a</emphasis>, <emphasis effect="italics">b</emphasis>, and <emphasis effect="italics">c</emphasis>:</para>
    <table summary=" " id="table-00003">
    <tgroup cols="5">
    <colspec colnum="1" colname="c1"/>
    <colspec colnum="2" colname="c2"/>
    <colspec colnum="3" colname="c3"/>
    <colspec colnum="4" colname="c4"/>
    <colspec colnum="5" colname="c5"/>
    <thead>
    <row>
    <entry namest="c1" nameend="c3">Provided input</entry>
    <entry namest="c4" nameend="c5">Expected output</entry>
    </row>
    </thead>
    <tbody>
      <row>
      <entry><code class="python inline-code" lang="python">a</code></entry>
      <entry><code class="python inline-code" lang="python">b</code></entry>
      <entry><code class="python inline-code" lang="python">c</code></entry>
      <entry><code class="python inline-code" lang="python">x1</code></entry>
      <entry><code class="python inline-code" lang="python">x2</code></entry>
      </row>
      <row>
      <entry><code class="python inline-code" lang="python">1</code></entry>
      <entry><code class="python inline-code" lang="python">0</code></entry>
      <entry><code class="python inline-code" lang="python">-4</code></entry>
      <entry><code class="python inline-code" lang="python">2.0</code></entry>
      <entry><code class="python inline-code" lang="python">-2.0</code></entry>
      </row>
      <row>
      <entry><code class="python inline-code" lang="python">1</code></entry>
      <entry><code class="python inline-code" lang="python">2</code></entry>
      <entry><code class="python inline-code" lang="python">-3</code></entry>
      <entry><code class="python inline-code" lang="python">1.0</code></entry>
      <entry><code class="python inline-code" lang="python">-3.0</code></entry>
      </row>
      <row>
      <entry><code class="python inline-code" lang="python">2</code></entry>
      <entry><code class="python inline-code" lang="python">1</code></entry>
      <entry><code class="python inline-code" lang="python">-1</code></entry>
      <entry><code class="python inline-code" lang="python">0.5</code></entry>
      <entry><code class="python inline-code" lang="python">-1.0</code></entry>
      </row>
      <row>
      <entry><code class="python inline-code" lang="python">0</code></entry>
      <entry><code class="python inline-code" lang="python">1</code></entry>
      <entry><code class="python inline-code" lang="python">1</code></entry>
      <entry namest="c4" nameend="c5"><code class="python inline-code" lang="python">division by zero</code></entry>
      </row>
      <row>
      <entry><code class="python inline-code" lang="python">1</code></entry>
      <entry><code class="python inline-code" lang="python">0</code></entry>
      <entry><code class="python inline-code" lang="python">1</code></entry>
      <entry namest="c4" nameend="c5"><code class="python inline-code" lang="python">math domain error</code></entry>
      </row>
      </tbody>
    </tgroup>
    </table>
    <media alt="quadratic_formula_program">
    <iframe width="660" height="371.4" src="../../media/interactive/coderunner/ch2/CodeRunner_02_07_10_Quadratic-formula.html"/>
    </media>
    </note>
    <note class="practice-program" id="note-00005">
    <title>Cylinder formulas</title>
    <para id="para-00015">In geometry, the surface area and volume of a right circular cylinder can be computed as follows:<newline/>
    <equation id="eq-00004"><m:math>
<m:mrow>
<m:mi>A</m:mi><m:mo>=</m:mo><m:mn>2</m:mn><m:mi>π</m:mi><m:mi>r</m:mi><m:mi>h</m:mi><m:mo>+</m:mo><m:mn>2</m:mn><m:mi>π</m:mi><m:msup>
<m:mi>r</m:mi>
<m:mn>2</m:mn>
</m:msup>
</m:mrow>
</m:math></equation><newline/>
    <equation id="eq-00005"><m:math>
<m:mrow>
<m:mi>V</m:mi><m:mo>=</m:mo><m:mi>π</m:mi><m:msup>
<m:mi>r</m:mi>
<m:mn>2</m:mn>
</m:msup>
<m:mi>h</m:mi></m:mrow>
</m:math></equation><newline/>
    Write the code for these two formulas in the program below. Hint: Your solution should use both <code class="python inline-code" lang="python">math.pi</code> and <code class="python inline-code" lang="python">math.tau</code>. Test your program using the following values for <emphasis effect="italics">r</emphasis> and <emphasis effect="italics">h</emphasis>:</para>
    <table summary=" " id="table-00004">
    <tgroup cols="4">
    <colspec colnum="1" colname="c1"/>
    <colspec colnum="2" colname="c2"/>
    <colspec colnum="3" colname="c3"/>
    <colspec colnum="4" colname="c4"/>
    <thead>
    <row>
    <entry namest="c1" nameend="c2">Provided input</entry>
    <entry namest="c3" nameend="c4">Expected output</entry>
    </row>
    </thead>
    <tbody>
      <row>
      <entry><code class="python inline-code" lang="python">r</code></entry>
      <entry><code class="python inline-code" lang="python">h</code></entry>
      <entry><code class="python inline-code" lang="python">area</code></entry>
      <entry><code class="python inline-code" lang="python">volume</code></entry>
      </row>
      <row>
      <entry><code class="python inline-code" lang="python">0</code></entry>
      <entry><code class="python inline-code" lang="python">0</code></entry>
      <entry><code class="python inline-code" lang="python">0.0</code></entry>
      <entry><code class="python inline-code" lang="python">0.0</code></entry>
      </row>
      <row>
      <entry><code class="python inline-code" lang="python">1</code></entry>
      <entry><code class="python inline-code" lang="python">1</code></entry>
      <entry><code class="python inline-code" lang="python">12.57</code></entry>
      <entry><code class="python inline-code" lang="python">3.14</code></entry>
      </row>
      <row>
      <entry><code class="python inline-code" lang="python">1</code></entry>
      <entry><code class="python inline-code" lang="python">2</code></entry>
      <entry><code class="python inline-code" lang="python">18.85</code></entry>
      <entry><code class="python inline-code" lang="python">6.28</code></entry>
      </row>
      <row>
      <entry><code class="python inline-code" lang="python">2.5</code></entry>
      <entry><code class="python inline-code" lang="python">4.8</code></entry>
      <entry><code class="python inline-code" lang="python">114.67</code></entry>
      <entry><code class="python inline-code" lang="python">94.25</code></entry>
      </row>
      <row>
      <entry><code class="python inline-code" lang="python">3.1</code></entry>
      <entry><code class="python inline-code" lang="python">7.0</code></entry>
      <entry><code class="python inline-code" lang="python">196.73</code></entry>
      <entry><code class="python inline-code" lang="python">211.33</code></entry>
      </row>
      </tbody>
    </tgroup>
    </table>
    <para id="para-0016">If you get an error, try to look up what that error means.</para>
    <media alt="cylinder_formulas_program">
    <iframe width="660" height="371.4" src="../../media/interactive/coderunner/ch2/CodeRunner_02_07_11_Cylinder-formulas.html"/>
    </media>
    </note>
    </content>
</document>