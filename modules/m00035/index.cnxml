<document xmlns="http://cnx.rice.edu/cnxml">
  <title>Chapter summary</title>
  <metadata xmlns:md="http://cnx.rice.edu/mdml">
    <md:title>Chapter summary</md:title>
    <md:content-id>m00035</md:content-id>
    <md:uuid>dc8cade9-2a57-4ce1-9603-1bdb92f933a0</md:uuid>
  </metadata>
  <content>
    <section id="sect-00001">
    <title/>
    <para id="para-00001">Highlights from this chapter include:</para>
    <list id="list-00001">
    <item>Booleans represent a value of <code class="python inline-code" lang="python">True</code> or <code class="python inline-code" lang="python">False</code>.</item>
    <item>Comparison operators compare values and produce <code class="python inline-code" lang="python">True</code> or <code class="python inline-code" lang="python">False</code>.</item>
    <item>Logical operators take condition operand(s) and produce <code class="python inline-code" lang="python">True</code> or <code class="python inline-code" lang="python">False</code>.</item>
    <item>Operators are evaluated in order according to precedence and associativity.</item>
    <item>Conditions are expressions that evaluate to <code class="python inline-code" lang="python">True</code> or <code class="python inline-code" lang="python">False</code>.</item>
    <item>Decision statements allow different paths of execution (branches) through code based on conditions.</item>
    <item>Decision statements can be nested inside other decision statements.</item>
    <item>Conditional expressions are single-line versions of <code class="python inline-code" lang="python">if-else</code> statements.</item>
    </list>
    <para id="para-00002">At this point, you should be able to write programs that evaluate conditions and execute code statements accordingly with the correct order of operations. The programming practice below ties together most topics presented in the chapter.</para>
    <table summary=" " id="table-00001">
    <title>Chapter 4 reference</title>
    <tgroup cols="2">
    <thead>
    <row>
    <entry>Function</entry>
    <entry>Description</entry>
    </row>
    </thead>
    <tbody>
    <row>
    <entry><code class="python inline-code" lang="python">bool(x)</code></entry>
    <entry><para id="para-00022">Converts <code class="python inline-code" lang="python">x</code> to a boolean value, either <code class="python inline-code" lang="python">True</code> or <code class="python inline-code" lang="python">False</code>.</para></entry>
    </row>
    <row>
    <entry>Operator</entry>
    <entry>Description</entry>
    </row>
    <row>
    <entry><para id="para-00003"><code class="python inline-code" lang="python">x == y</code><newline/>
    (equality)</para></entry>
    <entry><para id="para-00004">Compares the values of <code class="python inline-code" lang="python">x</code> and <code class="python inline-code" lang="python">y</code> and returns <code class="python inline-code" lang="python">True</code> if the values are equal and <code class="python inline-code" lang="python">False</code> otherwise.
    Ex: <code class="python inline-code" lang="python">10 == 10</code> is <code class="python inline-code" lang="python">True</code>.</para></entry>
    </row>
    <row>
    <entry><para id="para-00005"><code class="python inline-code" lang="python">x != y</code><newline/>
    (inequality)</para></entry>
    <entry><para id="para-00006">Compares the values of <code class="python inline-code" lang="python">x</code> and <code class="python inline-code" lang="python">y</code> and returns <code class="python inline-code" lang="python">True</code> if the values are inequal and <code class="python inline-code" lang="python">False</code> otherwise. Ex: <code class="python inline-code" lang="python">7 != 4</code> is <code class="python inline-code" lang="python">True</code>.</para></entry>
    </row>
    <row>
    <entry><para id="para-00007"><code class="python inline-code" lang="python">x > y</code><newline/>
    (greater than)</para></entry>
    <entry><para id="para-00008">Compares the values of <code class="python inline-code" lang="python">x</code> and <code class="python inline-code" lang="python">y</code> and returns <code class="python inline-code" lang="python">True</code> if the <code class="python inline-code" lang="python">x</code> is greater than <code class="python inline-code" lang="python">y</code> and <code class="python inline-code" lang="python">False</code> otherwise. Ex: <code class="python inline-code" lang="python">9 > 3</code> is <code class="python inline-code" lang="python">True</code>.</para></entry>
    </row>
    <row>
    <entry><para id="para-00009"><code class="python inline-code" lang="python">x &lt; y</code><newline/>
    (less than)</para></entry>
    <entry><para id="para-00010">Compares the values of <code class="python inline-code" lang="python">x</code> and <code class="python inline-code" lang="python">y</code> and returns <code class="python inline-code" lang="python">True</code> if the <code class="python inline-code" lang="python">x</code> is less than <code class="python inline-code" lang="python">y</code> and <code class="python inline-code" lang="python">False</code> otherwise. Ex: <code class="python inline-code" lang="python">9 &lt; 8</code> is <code class="python inline-code" lang="python">False</code>.</para></entry>
    </row>
    <row>
    <entry><para id="para-00011"><code class="python inline-code" lang="python">x >= y</code><newline/>
    (greater than or equal)</para></entry>
    <entry><para id="para-00012">Compares the values of <code class="python inline-code" lang="python">x</code> and <code class="python inline-code" lang="python">y</code> and returns <code class="python inline-code" lang="python">True</code> if the <code class="python inline-code" lang="python">x</code> is greater than or equal to <code class="python inline-code" lang="python">y</code> and <code class="python inline-code" lang="python">False</code> otherwise. Ex: <code class="python inline-code" lang="python">2 >= 2</code> is <code class="python inline-code" lang="python">True</code>.</para></entry>
    </row>
    <row>
    <entry><para id="para-00013"><code class="python inline-code" lang="python">x &lt;= y</code><newline/>
    (less than or equal)</para></entry>
    <entry><para id="para-00014">Compares the values of <code class="python inline-code" lang="python">x</code> and <code class="python inline-code" lang="python">y</code> and returns <code class="python inline-code" lang="python">True</code> if the <code class="python inline-code" lang="python">x</code> is less than or equal to <code class="python inline-code" lang="python">y</code> and <code class="python inline-code" lang="python">False</code> otherwise. Ex: <code class="python inline-code" lang="python">8 &lt;= 7</code> is <code class="python inline-code" lang="python">False</code>.</para></entry>
    </row>
    <row>
    <entry><para id="para-00015"><code class="python inline-code" lang="python">x and y</code><newline/>
    (logical)</para></entry>
    <entry><para id="para-00016">Evaluates the boolean values of <code class="python inline-code" lang="python">x</code> and <code class="python inline-code" lang="python">y</code> and returns <code class="python inline-code" lang="python">True</code> if both are True. Ex: <code class="python inline-code" lang="python">True and False</code> is <code class="python inline-code" lang="python">False</code>.</para></entry>
    </row>
    <row>
    <entry><para id="para-00017"><code class="python inline-code" lang="python">x or y</code><newline/>
    (logical)</para></entry>
    <entry><para id="para-00018">Evaluates the boolean values of <code class="python inline-code" lang="python">x</code> and <code class="python inline-code" lang="python">y</code> and returns <code class="python inline-code" lang="python">True</code> if either is True. Ex: <code class="python inline-code" lang="python">True or False</code> is <code class="python inline-code" lang="python">True</code>.</para></entry>
    </row>
    <row>
    <entry><para id="para-00019"><code class="python inline-code" lang="python">not x</code><newline/>
    (logical)</para></entry>
    <entry><para id="para-00020">Evaluates the boolean value of <code class="python inline-code" lang="python">x</code> and returns <code class="python inline-code" lang="python">True</code> if the value is False and <code class="python inline-code" lang="python">False</code> if the value is True. Ex: <code class="python inline-code" lang="python">not True</code> is <code class="python inline-code" lang="python">False</code>.</para></entry>
    </row>
    <row>
    <entry><emphasis effect="bold">Decision statement</emphasis></entry>
    <entry><emphasis effect="bold">Description</emphasis></entry>
    </row>
    <row>
    <entry><para id="para-00023"><code class="python inline-code" lang="python">if</code> statement</para></entry>
    <entry><code class="python" lang="python">
    # Statements before

    if condition:
      # Body

    # Statements after
    </code></entry>
    </row>
    <row>
    <entry><para id="para-00024"><code class="python inline-code" lang="python">else</code> statement</para></entry>
    <entry><code class="python" lang="python">
    # Statements before

    if condition:
      # Body
    else:
      # Body

    # Statements after
    </code></entry>
    </row>
    <row>
    <entry><para id="para-00025"><code class="python inline-code" lang="python">elif</code> statement</para></entry>
    <entry><code class="python" lang="python">
    # Statements before

    if condition:
      # Body
    elif condition:
      # Body
    else:
      # Body

    # Statements after
    </code></entry>
    </row>
    <row>
    <entry><para id="para-00026">nested <code class="python inline-code" lang="python">if</code> statement</para></entry>
    <entry><code class="python" lang="python">
    # Statements before

    if condition:
      if condition:
        # Body
      else:
        # Body
    else:
      if condition:
        # Body
      else:
        # Body
    
    # Statements after
    </code></entry>
    </row>
    <row>
    <entry><emphasis effect="bold">conditional expression</emphasis></entry>
    <entry><para id="para-00021"><code class="python inline-code" lang="python">expression_if_true if condition else expression_if_false</code></para></entry>
    </row>
    </tbody>
    </tgroup>
    </table>
    </section>
    </content>
</document>