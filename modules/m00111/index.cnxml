<document xmlns="http://cnx.rice.edu/cnxml">
  <title>Pandas</title>
  <metadata xmlns:md="http://cnx.rice.edu/mdml">
    <md:title>Pandas</md:title>
    <md:content-id>m00111</md:content-id>
    <md:uuid>9e4622e4-5cb1-4697-bf3e-d58700c8853e</md:uuid>
  </metadata>
  <content>
    <section id="sect-00001">
    <title>Learning objectives</title>
    <para id="para-00001">By the end of this section you should be able to</para>
    <list id="list-00001">
    <item>Describe the Pandas library.</item>
    <item>Create a DataFrame and a Series object.</item>
    <item>Choose appropriate Pandas functions to gain insight from heterogeneous data.</item>
    </list>
    </section>
    <section id="sect-00002">
    <title>Pandas library</title>
    <para id="para-00002"><term id="term-00001">Pandas</term> is an open-source Python library used for data cleaning, processing, and analysis. Pandas provides data structures and data analysis tools to analyze structured data efficiently. The name "Pandas" is derived from the term "panel data," which refers to multidimensional structured datasets. Key features of Pandas include:</para>
    <list id="list-00002">
    <item>Data structure: Pandas implements two main data structures:
    <list id="list-00003">
    <item>Series: A <term id="term-00002">Series</term> is a one-dimensional labeled array.</item>
    <item>DataFrame: A <term id="term-00003">DataFrame</term> is a two-dimensional labeled data structure that consists of columns and rows. A DataFrame can be thought of as a spreadsheet-like data structure where each column represents a Series. DataFrame is a heterogeneous data structure where each column can have a different data type.</item>
    </list></item>
    <item>Data processing functionality: Pandas provides various functionalities for data processing, such as data selection, filtering, slicing, sorting, merging, joining, and reshaping.</item>
    <item>Integration with other libraries: Pandas integrates well with other Python libraries, such as NumPy. The integration capability allows for data exchange between different data analysis and visualization tools.</item>
    </list>
    <para id="para-00003">The conventional alias for importing Pandas is <code class="python inline-code" lang="python">pd</code>. In other words, Pandas is imported as <code class="python inline-code" lang="python">import pandas as pd</code>. Examples of DataFrame and Series objects are shown below.</para>
    <table summary=" " id="table-00001">
    <title/>
    <tgroup cols="2">
    <thead>
    <row>
    <entry>DataFrame example</entry>
    <entry>Series example</entry>
    </row>
    </thead>
    <tbody>
    <row>
      <entry><table class="unnumbered" summary=" " id="table-00101">
        <title/>
    <tgroup cols="4">
    <thead>
    <row>
    <entry/>
    <entry>Name</entry>
    <entry>Age</entry>
    <entry>City</entry>
    </row>
    </thead>
    <tbody>
    <row><entry>0</entry>
      <entry>Emma</entry>
      <entry>15</entry>
      <entry>Dubai</entry>
    </row>
    <row><entry>1</entry>
      <entry>Gireeja</entry>
      <entry>28</entry>
      <entry>London</entry>
    </row>
    <row><entry>2</entry>
      <entry>Sophia</entry>
      <entry>22</entry>
      <entry>San Jose</entry>
    </row>
    </tbody></tgroup>
      </table></entry>
    <!--<entry><media display="inline" alt="The content of a dataframe is shown.">
    <image mime-type="image/jpeg" src="../../media/Python_15_3_image8.png"/>
    </media>
    </entry>-->
    <entry>
      <table class="unnumbered" summary=" " id="table-00102">
        <title/>
    <tgroup cols="2">
    <tbody>
    <row><entry>0</entry>
      <entry>Emma</entry>
    </row>
    <row><entry>1</entry>
      <entry>Gireeja</entry>
    </row>
    <row><entry>2</entry>
      <entry>Sophia</entry>
    </row>
    <row><entry>dtype:</entry>
      <entry>object</entry>
    </row>
    </tbody></tgroup>
      </table>
      <!--<media display="inline" alt="The content of a series is shown.">
    <image mime-type="image/jpeg" src="../../media/Python_15_3_image5.png"/>
    </media>-->
  
  </entry>
    </row>
    </tbody>
    </tgroup>
    </table>
    </section>
    <section id="sect-00003">
    <title>Data input and output</title>
    <para id="para-00004">A DataFrame can be created from a dictionary, list, NumPy array, or a CSV file. Column names and column data types can be specified at the time of DataFrame instantiation.</para>
<table summary=" " id="table-00002">
<title>DataFrame creation.</title>
<tgroup cols="4">
<thead>
<row>
<entry>Description</entry>
<entry>Example</entry>
<entry>Output</entry>
<entry>Explanation</entry>
</row>
</thead>
<tbody>
<row>
<entry>DataFrame from a dictionary</entry>
<entry><code class="python" lang="python">
import pandas as pd

# Create a dictionary of columns
data = {
  "Name": ["Emma", "Gireeja", "Sophia"],
  "Age": [15, 28, 22],
  "City": ["Dubai", "London", "San Jose"]
}

# Create a DataFrame from the dictionary
df = pd.DataFrame(data)

# Display the DataFrame
df</code></entry>
<entry>
<table class="unnumbered" summary=" " id="table-00103">
<title/>
<tgroup cols="4">
<thead>
<row>
<entry/>
<entry>Name</entry>
<entry>Age</entry>
<entry>City</entry>
</row>
</thead>
<tbody>
<row><entry>0</entry>
<entry>Emma</entry>
<entry>15</entry>
<entry>Dubai</entry>
</row>
<row><entry>1</entry>
<entry>Gireeja</entry>
<entry>28</entry>
<entry>London</entry>
</row>
<row><entry>2</entry>
<entry>Sophia</entry>
<entry>22</entry>
<entry>San Jose</entry>
</row>
</tbody></tgroup>
</table>
      <!--<media display="inline" alt="The content of the dataframe df is shown.">
    <image mime-type="image/jpeg" src="../../media/Python_15_3_image2.png"/>
    </media>-->
</entry>
<entry><para id="para-00005">The <code class="python inline-code" lang="python">pd.DataFrame()</code> function takes in a dictionary and converts it into a DataFrame. Dictionary keys will be column labels and values are stored in respective columns.</para></entry>
</row>
<row>
<entry>DataFrame from a list</entry>
<entry><code class="python" lang="python">
import pandas as pd

# Create a list of rows
data = [
  ["Emma", 15, "Dubai"],
  ["Gireeja", 28, "London"],
  ["Sophia", 22, "San Jose"]
]

# Define column labels
columns = ["Name", "Age", "City"]

# Create a DataFrame from list using column labels
df = pd.DataFrame(data, columns=columns)

# Display the DataFrame
df</code></entry>
<entry>
<table class="unnumbered" summary=" " id="table-00104">
<title/>
<tgroup cols="4">
<thead>
<row>
<entry/>
<entry>Name</entry>
<entry>Age</entry>
<entry>City</entry>
</row>
</thead>
<tbody>
<row><entry>0</entry>
<entry>Emma</entry>
<entry>15</entry>
<entry>Dubai</entry>
</row>
<row><entry>1</entry>
<entry>Gireeja</entry>
<entry>28</entry>
<entry>London</entry>
</row>
<row><entry>2</entry>
<entry>Sophia</entry>
<entry>22</entry>
<entry>San Jose</entry>
</row>
</tbody></tgroup>
</table>
      <!--<media display="inline" alt="The content of the dataframe df is shown.">
    <image mime-type="image/jpeg" src="../../media/Python_15_3_image2.png"/>
    </media>-->
</entry>
<entry><para id="para-00006">The <code class="python inline-code" lang="python">pd.DataFrame()</code> function takes in a list containing the records in different rows of a DataFrame, along with a list of column labels, and creates a DataFrame with the given rows and column labels.</para></entry>
</row>
<row>
<entry>DataFrame from a NumPy array</entry>
<entry><code class="python" lang="python">
import numpy as np
import pandas as pd

# Create a NumPy array
data = np.array([
  [1, 0, 0],
  [0, 1, 0],
  [2, 3, 4]
])

# Define column labels
columns = ["A", "B", "C"]

# Create a DataFrame from the NumPy array
df = pd.DataFrame(data, columns=columns)

# Display the DataFrame
df</code></entry>
<entry>
<table class="unnumbered" summary=" " id="table-00105">
<title/>
<tgroup cols="4">
<thead>
<row>
<entry/>
<entry>A</entry>
<entry>B</entry>
<entry>C</entry>
</row>
</thead>
<tbody>
<row>
<entry>0</entry>
<entry>1</entry>
<entry>0</entry>
<entry>0</entry>
</row>
<row><entry>1</entry>
<entry>0</entry>
<entry>1</entry>
<entry>0</entry>
</row>
<row><entry>2</entry>
<entry>2</entry>
<entry>3</entry>
<entry>4</entry>
</row>
</tbody></tgroup>
</table>
      <!--<media display="inline" alt="The content of the dataframe df is shown.">
    <image mime-type="image/jpeg" src="../../media/Python_15_3_image4.png"/>
    </media>-->
</entry>
<entry><para id="para-00007">A NumPy array, along with column labels, are passed to the <code class="python inline-code" lang="python">pd.DataFrame()</code> function to create a DataFrame object.</para></entry>
</row>
<row>
<entry>DataFrame from a CSV file</entry>
<entry><code class="python" lang="python">
import pandas as pd

# Read the CSV file into a DataFrame
df = pd.read_csv("data.csv")

# Display the DataFrame
df</code></entry>
<entry>The content of the CSV file will be printed in a tabular format.</entry>
<entry><para id="para-00008">The <code class="python inline-code" lang="python">pd.read_csv()</code> function reads a CSV file into a DataFrame and organizes the content in a tabular format.</para></entry>
</row>
<row>
<entry>DataFrame from a Excel file</entry>
<entry><code class="python" lang="python">
import pandas as pd

# Read the Excel file into a DataFrame
df = pd.read_excel("data.xlsx")

# Display the DataFrame
df</code></entry>
<entry>The content of the Excel file will be printed in a tabular format.</entry>
<entry><para id="para-00009">The <code class="python inline-code" lang="python">pd.read_excel()</code> function reads an Excel file into a DataFrame and organizes the content in a tabular format.</para></entry>
</row>
</tbody>
</tgroup>
</table>
    <note class="learning-questions" id="note-00001">
    <title>Pandas basics</title>
    <exercise id="exer-00001">
    <problem id="prob-00001">
    <para id="para-00010"><link class="os-embed" url="#exercise/CPL-ch15-m03-p01"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00002">
    <problem id="prob-00002">
    <para id="para-00011"><link class="os-embed" url="#exercise/CPL-ch15-m03-p02"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00003">
    <problem id="prob-00003">
    <para id="para-00012"><link class="os-embed" url="#exercise/CPL-ch15-m03-p03"/></para>
    </problem>
    </exercise>
    </note>
    </section>
    <section id="sect-00004">
    <title>Pandas for data manipulation and analysis</title>
    <para id="para-00013">The Pandas library provides functions and techniques to explore, manipulate, and gain insights from the data. Key DataFrame functions that analyze this code are described in the following table.</para>
    <code class="python" lang="python">
    import pandas as pd
    import numpy as np
    
    # Create a sample DataFrame
    days = {
      'Season': ['Summer', 'Summer', 'Fall', 'Winter', 'Fall', 'Winter'],
      'Month': ['July', 'June', 'September', 'January', 'October', 'February'],
      'Month-day': [1, 12, 3, 7, 20, 28],
      'Year': [2000, 1990, 2020, 1998, 2001, 2022]
    }
    df = pd.DataFrame(days)</code>

<table summary=" " id="table-00106">
<title/>
<tgroup cols="5">
<thead>
<row>
<entry/>
<entry>Season</entry>
<entry>Month</entry>
<entry>Month-day</entry>
<entry>Year</entry>
</row>
</thead>
<tbody>
<row><entry>0</entry>
<entry>Summer</entry>
<entry>July</entry>
<entry>1</entry>
<entry>2000</entry>
</row>
  <row><entry>1</entry>
    <entry>Summer</entry>
    <entry>June</entry>
    <entry>12</entry>
    <entry>1990</entry>
  </row>
  <row><entry>2</entry>
    <entry>Fall</entry>
    <entry>September</entry>
    <entry>3</entry>
    <entry>2020</entry>
  </row>
  <row><entry>3</entry>
    <entry>Winter</entry>
    <entry>January</entry>
    <entry>7</entry>
    <entry>1998</entry>
  </row>
  <row><entry>4</entry>
    <entry>Fall</entry>
    <entry>October</entry>
    <entry>20</entry>
    <entry>2001</entry>
  </row>
  <row><entry>5</entry>
    <entry>Winter</entry>
    <entry>February</entry>
    <entry>28</entry>
    <entry>2022</entry>
  </row>
  </tbody>
  </tgroup>
  </table>


    <!--<figure class="unnumbered" id="fig-00001">
    <media display="inline" alt="The content of the dataframe df is shown.">
    <image mime-type="image/jpeg" src="../../media/Python_15_3_image6.png"/>
    </media>
    <caption/>
    </figure>-->
<table summary=" " id="table-00003">
<title>DataFrame functions.</title>
<tgroup cols="4">
<thead>
<row>
<entry>Function name</entry>
<entry>Explanation</entry>
<entry>Example</entry>
<entry>Output</entry>
</row>
</thead>
<tbody>
<row>
<entry><para id="para-00014"><code class="python inline-code" lang="python">head(n)</code></para></entry>
<entry><para id="para-00015">Returns the first <code class="python inline-code" lang="python">n</code> rows. If a value is not passed, the first 5 rows will be shown.</para></entry>
<entry><code class="python" lang="python">df.head(4)</code></entry>
<entry>
<table class="unnumbered" summary=" " id="table-00107">
<title/>
<tgroup cols="5">
<thead>
<row>
<entry/>
<entry>Season</entry>
<entry>Month</entry>
<entry>Month-day</entry>
<entry>Year</entry>
</row>
</thead>
<tbody>
<row><entry>0</entry>
<entry>Summer</entry>
<entry>July</entry>
<entry>1</entry>
<entry>2000</entry>
</row>
<row><entry>1</entry>
<entry>Summer</entry>
<entry>June</entry>
<entry>12</entry>
<entry>1990</entry>
</row>
<row><entry>2</entry>
<entry>Fall</entry>
<entry>September</entry>
<entry>3</entry>
<entry>2020</entry>
</row>
<row><entry>3</entry>
<entry>Winter</entry>
<entry>January</entry>
<entry>7</entry>
<entry>1998</entry>
</row>
</tbody>
</tgroup>
</table>
      <!--<media display="inline" alt="The content of the dataframe df is shown.">
    <image mime-type="image/jpeg" src="../../media/Python_15_3_image3.png"/>
    </media>-->
</entry>
</row>
<row>
<entry><para id="para-00016"><code class="python inline-code" lang="python">tail(n)</code></para></entry>
<entry><para id="para-00027">Returns the last <code class="python inline-code" lang="python">n</code> rows. If a value is not passed, the last 5 rows will be shown.</para></entry>
<entry><code class="python" lang="python">df.tail(3)</code></entry>
<entry>
<table class="unnumbered" summary=" " id="table-00108">
<title/>
<tgroup cols="5">
<thead>
<row>
<entry/>
<entry>Season</entry>
<entry>Month</entry>
<entry>Month-day</entry>
<entry>Year</entry>
</row>
</thead>
<tbody>
<row><entry>3</entry>
<entry>Winter</entry>
<entry>January</entry>
<entry>7</entry>
<entry>1998</entry>
</row>
<row><entry>4</entry>
<entry>Fall</entry>
<entry>October</entry>
<entry>20</entry>
<entry>2001</entry>
</row>
<row><entry>5</entry>
<entry>Winter</entry>
<entry>February</entry>
<entry>28</entry>
<entry>2022</entry>
</row>
</tbody>
</tgroup>
</table>
      <!--<media display="inline" alt="The content of the dataframe df is shown.">
    <image mime-type="image/jpeg" src="../../media/Python_15_3_image1.png"/>
    </media>-->
</entry>
</row>
<row>
<entry><para id="para-00017"><code class="python inline-code" lang="python">info()</code></para></entry>
<entry>Provides a summary of the DataFrame, including the column names, data types, and the number of non-null values. The function also returns the DataFrame's memory usage.</entry>
<entry><code class="python" lang="python">df.info()</code></entry>
<entry>
<code class="python" lang="python">
&lt;class 'pandas.core.frame.DataFrame'>
RangeIndex: 6 entries, 0 to 5
Data columns (total 4 columns):
 #    Column        Non-Null Count    Dtype
---   ------        --------------    -----
 0    Season        6 non-null        object
 1    Month         6 non-null        object
 2    Month-day     6 non-null        int64
 3    Year          6 non-null        int64
dtypes: int64(2), object(2)
memory usage: 320.0+ bytes
</code>
        <!--  <media display="inline" alt="The content of the dataframe df is shown.">
        <image mime-type="image/jpeg" src="../../media/Python_15_3_image9.png"/>
        </media>-->
</entry>
</row>
<row>
<entry><para id="para-00018"><code class="python inline-code" lang="python">describe()</code></para></entry>
<entry>Generates the column count, mean, standard deviation, minimum, maximum, and quartiles.</entry>
<entry><code class="python" lang="python">df.describe()</code></entry>
<entry>
<table class="unnumbered" summary=" " id="table-00109">
<title/>
<tgroup cols="3">
<thead>
<row>
<entry/>
<entry>Month-day</entry>
<entry>Year</entry>
</row>
</thead>
<tbody> 
<row><entry align="center">count</entry>
<entry align="right">6.000000</entry>
<entry align="right">6.000000</entry>
</row>
<row><entry align="center">mean</entry>
<entry align="right">11.833333</entry>
<entry align="right">2005.166667</entry>
</row>
<row><entry align="center">std</entry>
<entry align="right">10.457852</entry>
<entry align="right">12.875040</entry>
</row>
<row><entry align="center">min</entry>
<entry align="right">1.000000</entry>
<entry align="right">1990.000000</entry>
</row>
<row><entry align="center">25%</entry>
<entry align="right">4.000000</entry>
<entry align="right">1998.500000</entry>
</row>
<row><entry align="center">50%</entry>
<entry align="right">9.500000</entry>
<entry align="right">2000.500000</entry>
</row>
<row><entry align="center">75%</entry>
<entry align="right">18.000000</entry>
<entry align="right">2015.250000</entry>
</row>
<row><entry align="center">max</entry>
<entry align="right">28.000000</entry>
<entry align="right">2022.000000</entry>
</row>
</tbody>
</tgroup>
</table>
      <!--<media display="inline" alt="The content of the dataframe df is shown.">
    <image mime-type="image/jpeg" src="../../media/Python_15_3_image7.png"/>
    </media>-->
</entry>
</row>
<row>
<entry><para id="para-00019"><code class="python inline-code" lang="python">value_counts()</code></para></entry>
<entry>Counts the occurrences of unique values in a column when a column is passed as an argument and presents them in descending order.</entry>
<entry><code class="python" lang="python">df.value_counts \('Season')</code></entry>
<entry><code class="python" lang="python">
Season
Fall  2
Summer  2
Winter  2
dtype: int64
</code></entry>
</row>
<row>
<entry><para id="para-00020"><code class="python inline-code" lang="python">unique()</code></para></entry>
<entry>Returns an array of unique values in a column when called on a column.</entry>
<entry><code class="python" lang="python">df['Season'] \.unique()</code></entry>
<entry><code class="python" lang="python">​​['Summer' 'Fall' 'Winter']</code></entry>
</row>
</tbody>
</tgroup>
</table>

    <note class="learning-questions" id="note-00002">
    <title>DataFrame operations</title>
    <exercise id="exer-00004">
    <problem id="prob-00004">
    <para id="para-00021"><link class="os-embed" url="#exercise/CPL-ch15-m03-p04"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00005">
    <problem id="prob-00005">
    <para id="para-00022"><link class="os-embed" url="#exercise/CPL-ch15-m03-p05"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00006">
    <problem id="prob-00006">
    <para id="para-00023"><link class="os-embed" url="#exercise/CPL-ch15-m03-p06"/></para>
    </problem>
    </exercise>
    </note>
    <note id="note-00003">
    <title>Exploring further</title>
    <para id="para-00024">Please refer to the Pandas user guide for more information about the Pandas library.</para>
    <list id="list-00004">
    <item><link url="https://openstax.org/r/100pandaguide">Pandas User Guide</link></item>
    </list>
    </note>
    </section>
    <section id="sect-00005">
    <title>Programming practice with Google</title>
    <para id="para-00025">Use the Google Colaboratory document below to practice Pandas functionalities to extract insights from a dataset.</para>
    <para id="para-00026"><link url="https://openstax.org/r/100googlecolab">Google Colaboratory document</link></para>
    </section>
    </content>
</document>