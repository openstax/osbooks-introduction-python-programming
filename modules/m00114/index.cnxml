<document xmlns="http://cnx.rice.edu/cnxml">
  <title>Chapter summary</title>
  <metadata xmlns:md="http://cnx.rice.edu/mdml">
    <md:title>Chapter summary</md:title>
    <md:content-id>m00114</md:content-id>
    <md:uuid>989195b0-27f7-4d88-bc0d-67037186ee76</md:uuid>
  </metadata>
  <content>
    <section id="sect-00004">
      <title/>
      <para id="para-00017">This chapter introduced the basics of programming in Python, including:</para>
      <list id="list-00002">
      <item><code class="python inline-code">print()</code> and <code class="python inline-code">input()</code></item>
      <item>Variables and assignment</item>
      <item>Strings, integers, and floats</item>
      <item>Arithmetic, concatenation</item>
      <item>Common error messages</item>
      <item>Comments and docstrings</item>
      </list>
      <para id="para-00018">At this point, you should be able to write programs that ask for input, perform simple calculations, and output the results. The programming practice below ties together most topics presented in the chapter.</para>
      <table summary=" " id="table-00001">
      <title>Chapter 1 reference</title>
      <tgroup cols="2">
      <thead>
      <row>
      <entry>Function</entry>
      <entry>Description</entry>
      </row>
      </thead>
      <tbody>
      <row>
      <entry>print(values)</entry>
      <entry>Outputs one or more values, each separated by a space, to the user.</entry>
      </row>
      <row>
      <entry>input(prompt)</entry>
      <entry><para id="para-00118">If present, <code class="python inline-code">prompt</code> is output to the user. The function then reads a line of input from the user.</para></entry>
      </row>
      <row>
      <entry>len(string)</entry>
      <entry>Returns the length (the number of characters) of a string.</entry>
      </row>
      <row>
      <entry>type(value)</entry>
      <entry><para id="para-00119">Returns the type (or class) of a value. Ex: <code class="python inline-code">type(123)</code> is <code class="python inline-code">&lt;class 'int'></code>.</para></entry>
      </row>
      <row>
      <entry><emphasis effect="bold">Operator</emphasis></entry>
      <entry><emphasis effect="bold">Description</emphasis></entry>
      </row>
      <row>
      <entry><para id="para-00120"><code class="python inline-code">=</code><newline/>
      (assignment)</para></entry>
      <entry>Assigns (or updates) the value of a variable. In Python, variables begin to exist when assigned for the first time.</entry>
      </row>
      <row>
      <entry><para id="para-00121"><code class="python inline-code">+</code><newline/>
      (concatenation)</para></entry>
      <entry>Appends the contents of two strings, resulting in a new string.</entry>
      </row>
      <row>
      <entry><para id="para-00122"><code class="python inline-code">+</code><newline/>
      (addition)</para></entry>
      <entry>Adds the values of two numbers.</entry>
      </row>
      <row>
      <entry><para id="para-00123"><code class="python inline-code">-</code><newline/>
      (subtraction)</para></entry>
      <entry>Subtracts the value of one number from another.</entry>
      </row>
      <row>
      <entry><para id="para-00124"><code class="python inline-code">*</code><newline/>
      (multiplication)</para></entry>
      <entry>Multiplies the values of two numbers.</entry>
      </row>
      <row>
      <entry><para id="para-00125"><code class="python inline-code">/</code><newline/>
      (division)</para></entry>
      <entry>Divides the value of one number from another.</entry>
      </row>
      <row>
      <entry><para id="para-00126"><code class="python inline-code">**</code><newline/>
      (exponentiation)</para></entry>
      <entry><para id="para-00226">Raises a number to a power. Ex: <code class="python inline-code">3**2</code> is three squared.</para></entry>
      </row>
      <row>
      <entry><emphasis effect="bold">Syntax</emphasis></entry>
      <entry><emphasis effect="bold">Description</emphasis></entry>
      </row>
      <row>
      <entry><para id="para-00127"><code class="python inline-code">#</code><newline/>
      (comment)</para></entry>
      <entry>All text is ignored from the # symbol to the end of the line.</entry>
      </row>
      <row>
      <entry><para id="para-00128"><code class="python inline-code">'</code> or <code class="python inline-code">"</code><newline/>
      (string)</para></entry>
      <entry><para id="para-00129">Strings may be written using either kind of quote. Ex: <code class="python inline-code">'A'</code> and <code class="python inline-code">"A"</code> represent the same string. By convention, this book uses double quotes (<code class="python inline-code">"</code>) for most strings.</para></entry>
      </row>
      </tbody>
      </tgroup>
      <caption/>
      </table>
      </section>
    
        <note class="practice-program" id="note-00005">
        <title>Fun facts</title>
        <para id="para-00019">Write a program that assigns a variable named <code class="python inline-code">number</code> to any integer of your choice. Ex: <code class="python inline-code">number = 74</code>. Then use this variable to calculate and output the following results:</para>
        <code class="python" lang="python">
        74 squared is 5476
        74 cubed is 405224
        One tenth of 74 is 7.4
        74 plus 123 is 197
        74 minus 456 is -382
        </code>
        <para id="para-00020">Run the program multiple times, using a different integer each time. Your output should be mathematically correct for any integer that you choose.</para>
        <para id="para-00021">The point of this exercise is to perform basic arithmetic within a print statement. Do not use any other variables besides <code class="python inline-code">number</code>. Your program should have only one assignment statement (at the beginning).</para>
        <media alt="fun_facts_program">
        <iframe width="660" height="371.4" src="../../media/interactive//coderunner/ch1/CodeRunner_01_10_13_Fun-facts.html"/>
        </media>
        </note>
        <note class="practice-program" id="note-00006">
        <title>Mad lib</title>
        <para id="para-00022">A mad lib is a word game in which one person asks others for words to substitute into a pre-written story. The story is then read aloud with the goal of making people laugh.</para>
        <para id="para-00023">This exercise is based the <link url="https://www.madlibs.com/wp-content/uploads/2016/04/VacationFun_ML_2009_pg15.pdf">Vacations Mad Lib</link> available on the <link url="https://www.madlibs.com/printables/">Printables</link> section of MadLibs.com. Write a program that asks the user to input two adjectives and two nouns (user input in bold):</para>
        <code class="python" lang="python">
        Adjective: <emphasis effect="bold">tranquil</emphasis>
        Adjective: <emphasis effect="bold">scandalous</emphasis>
        Noun: <emphasis effect="bold">pancake</emphasis>
        Noun: <emphasis effect="bold">field</emphasis>
        </code>
        <para id="para-00024">Use <code class="python inline-code">input()</code> to display each prompt exactly as shown. The user's input should be on the same line as the prompt. Each colon must be followed by exactly one space. After reading the input, the program should output the following three lines:</para>
        <code class="python" lang="python">
        <newline />
        A vacation is when you take a trip to some <emphasis effect="bold">tranquil</emphasis> place with your <emphasis effect="bold">scandalous</emphasis> family.
        Usually you go to some place that is near a/an <emphasis effect="bold">pancake</emphasis> or up on a/an <emphasis effect="bold">field</emphasis>.
        </code>
        <para id="para-00025">Notice that the first line should be completely blank.  Replace the bold words (from the above example) with the actual words input by the user.</para>
        <para id="para-00026">Your final program should have four input statements, three print statements, and at least two comments. For completeness, write an appropriate docstring at the top of the program.</para>
        <media alt="mad_lib_program">
        <iframe width="660" height="371.4" src="../../media/interactive//coderunner/ch1/CodeRunner_01_10_14_Mad-lib.html"/>
        </media>
        </note>
  </content>
</document>