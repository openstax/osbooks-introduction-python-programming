<document xmlns="http://cnx.rice.edu/cnxml">
  <title>Dictionary operations</title>
  <metadata xmlns:md="http://cnx.rice.edu/mdml">
    <md:title>Dictionary operations</md:title>
    <md:content-id>m00076</md:content-id>
    <md:uuid>3bcf5fc2-ddff-44bb-83aa-9eeb891c17ab</md:uuid>
  </metadata>
  <content>
    <section id="sect-00001">
    <title>Learning objectives</title>
    <para id="para-00001">By the end of this section you should be able to</para>
    <list id="list-00001">
    <item>Recognize that a dictionary object is mutable.</item>
    <item>Evaluate dictionary items, keys, and values.</item>
    <item>Demonstrate the ability to access, evaluate, and modify dictionary items.</item>
    <item>Modify a dictionary by adding items.</item>
    <item>Modify a dictionary by removing items.</item>
    </list>
    </section>
    <section id="sect-00002">
    <title>Accessing dictionary items</title>
    <para id="para-00002">In Python, values associated with keys in a dictionary can be accessed using the keys as indexes. Here are two ways to access dictionary items in Python:
    <list id="list-00002">
    <item>Square bracket notation: Square brackets <code class="python inline-code" lang="python">[]</code> with the key inside access the value associated with that key. If the key is not found, an exception will be thrown.</item>
    <item><code class="python inline-code" lang="python">get()</code> method: The <code class="python inline-code" lang="python">get()</code> method is called with the key as an argument to access the value associated with that key. If the key is not found, the method returns <code class="python inline-code" lang="python">None</code> by default, or a default value specified as the second argument.</item>
    </list></para>
    <para id="para-00003">Ex: In the code below, a dictionary object <code class="python inline-code" lang="python">my_dict</code> is initialized with items <code class="python inline-code" lang="python">{"apple": 2, "banana": 3, "orange": 4}</code>. The square bracket notation and <code class="python inline-code" lang="python">get()</code> method are used to access values associated with the keys <code class="python inline-code" lang="python">"banana"</code> and <code class="python inline-code" lang="python">"apple"</code>, respectively. When accessing the dictionary to obtain the key <code class="python inline-code" lang="python">"pineapple"</code>, <code class="python inline-code" lang="python">-1</code> is returned since the key does not exist in the dictionary.</para>
    <code class="python" lang="python">
    my_dict = {"apple": 2, "banana": 3, "orange": 4}
    print(my_dict["banana"]) # Prints: 3
    print(my_dict.get("apple")) # Prints: 2
    print(my_dict.get("pineapple", -1)) # Prints: -1
    </code>
    <note class="guided-slides" id="note-00001">
    <title>Accessing dictionary items</title>
    <media alt="accessing_dictionary_slides">
    <iframe width="660" height="371.4" src="https://www.openstax.org/r/accessing-dictionary"/>
    </media>
    </note>
    <note class="learning-questions" id="note-00002">
    <title>Dictionary items</title>
    <para id="para-00004">Given the dictionary <code class="python inline-code" lang="python">members = {"Jaya": "Student", "John": "TA", "Ksenia": "Staff"}</code>, answer the following questions.</para>
    <exercise id="exer-00001">
    <problem id="prob-00001">
    <para id="para-00005"><link class="os-embed" url="#exercise/CPL-ch10-m03-p01"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00002">
    <problem id="prob-00002">
    <para id="para-00006"><link class="os-embed" url="#exercise/CPL-ch10-m03-p02"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00003">
    <problem id="prob-00003">
    <para id="para-00007"><link class="os-embed" url="#exercise/CPL-ch10-m03-p03"/></para>
    </problem>
    </exercise>
    </note>
    </section>
    <section id="sect-00003">
    <title>Obtaining dictionary keys and values</title>
    <para id="para-00008">Dictionary keys, values, and both keys and values can be obtained using <code class="python inline-code" lang="python">keys()</code>, <code class="python inline-code" lang="python">values()</code>, and <code class="python inline-code" lang="python">items()</code> function calls, respectively. The return type of <code class="python inline-code" lang="python">keys()</code>, <code class="python inline-code" lang="python">values()</code>, and <code class="python inline-code" lang="python">items()</code> are <code class="python inline-code" lang="python">dict_keys</code>, <code class="python inline-code" lang="python">dict_values</code>, and <code class="python inline-code" lang="python">dict_items</code>, which can be converted to a <code class="python inline-code" lang="python">list</code> object using the list constructor <code class="python inline-code" lang="python">list()</code>.</para>
    <example id="exam-00001">
    <title>String template formatting for course enrollment requests</title>
    <para id="para-00009">A dictionary object with items <code class="python inline-code" lang="python">{"a": 97, "b": 98, "c": 99}</code> is created. Functions <code class="python inline-code" lang="python">keys()</code>, <code class="python inline-code" lang="python">values()</code>, and <code class="python inline-code" lang="python">items()</code> are called to obtain keys, values, and items in the dictionary, respectively. <code class="python inline-code" lang="python">list()</code> is also used to convert the output to a <code class="python inline-code" lang="python">list</code> object.</para>
    <code class="python" lang="python">
    dictionary_object = {"a": 97, "b": 98, "c": 99}

    print(dictionary_object.keys())
    print(list(dictionary_object.keys()))
    print(dictionary_object.values())
    print(dictionary_object.items())
    </code>
    <para id="para-00010">The above code's output is:</para>
    <code class="python" lang="python">
    dict_keys(["a", "b", "c"])
    ["a", "b", "c"]
    dict_values([97, 98, 99])
    dict_items([("a", 97), ("b", 98), ("c", 99)])
    </code>
    </example>
    <note class="learning-questions" id="note-00003">
    <title>Dictionary keys and values</title>
    <para id="para-00011">Given the dictionary <code class="python inline-code" lang="python">numbers = {"one": 1, "two": 2, "three": 3}</code>, answer the following questions.</para>
    <exercise id="exer-00004">
    <problem id="prob-00004">
    <para id="para-00012"><link class="os-embed" url="#exercise/CPL-ch10-m03-p04"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00005">
    <problem id="prob-00005">
    <para id="para-00013"><link class="os-embed" url="#exercise/CPL-ch10-m03-p05"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00006">
    <problem id="prob-00006">
    <para id="para-00014"><link class="os-embed" url="#exercise/CPL-ch10-m03-p06"/></para>
    </problem>
    </exercise>
    </note>
    </section>
    <section id="sect-00004">
    <title>Dictionary mutability</title>
    <para id="para-00015">In Python, a dictionary is a mutable data type, which means that a dictionary's content can be modified after creation. Dictionary items can be added, updated, or deleted from a dictionary after a dictionary object is created.</para>
    <para id="para-00016">To add an item to a dictionary, either the square bracket notation or <code class="python inline-code" lang="python">update()</code> function can be used.</para>
    <list id="list-00003">
    <item>Square bracket notation: When using square brackets to create a new key object and assign a value to the key, the new key-value pair will be added to the dictionary.
    <code display="block" class="python" lang="python">
    my_dict = {"apple": 2, "banana": 3, "orange": 4}
    my_dict["pineapple"] = 1
    print(my_dict) # Prints: {"apple": 2, "banana": 3, "orange": 4, "pineapple": 1}
    </code></item>
    <item><code class="python inline-code" lang="python">update()</code> method: the <code class="python inline-code" lang="python">update()</code> method can be called with additional key-value pairs to update the dictionary content.
    <code display="block" class="python" lang="python">
    my_dict = {"apple": 2, "banana": 3, "orange": 4}
    my_dict.update({"pineapple": 1, "cherry": 0})
    print(my_dict) # Prints: {"apple": 2, "banana": 3, "orange": 4, "pineapple": 1, "cherry": 0}
    </code></item>
    </list>
    <para id="para-00017">To modify a dictionary item, the two approaches above can be used on an existing dictionary key along with the updated value. Ex:</para>
    <list id="list-00004">
    <item>Square bracket notation:
    <code display="block" class="python" lang="python">
    my_dict = {"apple": 2, "banana": 3, "orange": 4}
    my_dict["apple"] = 1
    print(my_dict) # Prints: {"apple": 1, "banana": 3, "orange": 4}
    </code></item>
    <item><code class="python inline-code" lang="python">update()</code> method:
    <code display="block" class="python" lang="python">
    my_dict = {"apple": 2, "banana": 3, "orange": 4}
    my_dict.update({"apple": 1})
    print(my_dict) # Prints: {"apple": 1, "banana": 3, "orange": 4}
    </code></item>
    </list>
    <para id="para-00018">Items can be deleted from a dictionary using the <code class="python inline-code" lang="python">del</code> keyword or the <code class="python inline-code" lang="python">pop()</code> method.</para>
    <list id="list-00005">
    <item><code class="python inline-code" lang="python">del</code> keyword:
    <code display="block" class="python" lang="python">
    my_dict = {"apple": 2, "banana": 3, "orange": 4}
    del my_dict["orange"]
    print(my_dict) # Prints: {"apple": 2, "banana": 3}
    </code></item>
    <item><code class="python inline-code" lang="python">pop()</code> method:
    <code display="block" class="python" lang="python">
    my_dict = {"apple": 2, "banana": 3, "orange": 4}
    deleted_value = my_dict.pop("banana")
    print(deleted_value) # Prints: 3
    print(my_dict) # Output: {"apple": 2, "orange": 4}}
    </code></item>
    </list>
    <note class="guided-slides" id="note-00004">
    <title>Modifying dictionary items</title>
    <media alt="modifying_dictionary_slides">
    <iframe width="660" height="371.4" src="https://www.openstax.org/r/modifying-dictionary"/>
    </media>
    </note>
    <note class="learning-questions" id="note-00005">
    <title>Modifying a dictionary</title>
    <para id="para-00019">Given the dictionary <code class="python inline-code" lang="python">food = {"Coconut soup": "$15", "Butter Chicken": "$18", "Kabob": "$20"}</code>, answer the following questions.</para>
    <exercise id="exer-00007">
    <problem id="prob-00007">
    <para id="para-00020"><link class="os-embed" url="#exercise/CPL-ch10-m03-p07"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00008">
    <problem id="prob-00008">
    <para id="para-00021"><link class="os-embed" url="#exercise/CPL-ch10-m03-p08"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00009">
    <problem id="prob-00009">
    <para id="para-00022"><link class="os-embed" url="#exercise/CPL-ch10-m03-p09"/></para>
    </problem>
    </exercise>
    </note>
    </section>
   
    <note class="practice-program" id="note-00006">
    <title>Create a dictionary of cars step-by-step</title>
    <para id="para-00023">Follow the steps below to create a dictionary of <code class="python inline-code" lang="python">cars</code> and modify it step-by-step.</para>
    <list list-type="enumerated" id="list-00006">
    <item>Create an empty dictionary.</item>
    <item>Add a key-value pair of <code class="python inline-code" lang="python">"Mustang": 10</code>.</item>
    <item>Add another key-value pair of <code class="python inline-code" lang="python">"Volt": 3</code>.</item>
    <item>Print the dictionary.</item>
    <item>Modify the value associated with key <code class="python inline-code" lang="python">"Mustang"</code> to be equal to <code class="python inline-code" lang="python">2</code>.</item>
    <item>Delete key <code class="python inline-code" lang="python">"Volt"</code> and the associated value.</item>
    <item>Print the dictionary content.</item>
    </list>
    <code class="python" lang="python">
    Prints {"Mustang": 2}
    </code>
    <media alt="create_a_dictionary_of_cars_step_by_step_program">
    <iframe width="660" height="371.4" src="../../media/interactive//coderunner/ch10/CodeRunner_10_04_03_Create-a-dictionary-of-cars-step-by-step.html"/>
    </media>
    </note>
    <note class="practice-program" id="note-00007">
    <title>The number of unique characters</title>
    <para id="para-00024">Given a string value, calculate and print the number of unique characters using a dictionary.</para>
    <code class="python" lang="python">
    Input:
    string_value = "This is a string"
    </code>
    <code class="python" lang="python">
    Prints 10
    </code>
    <media alt="the_number_of_unique_characters_program">
    <iframe width="660" height="371.4" src="../../media/interactive//coderunner/ch10/CodeRunner_10_04_04_The-number-of-unique-characters.html"/>
    </media>
    </note>
    </content>
</document>