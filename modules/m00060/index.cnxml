<document xmlns="http://cnx.rice.edu/cnxml">
  <title>String slicing</title>
  <metadata xmlns:md="http://cnx.rice.edu/mdml">
    <md:title>String slicing</md:title>
    <md:content-id>m00060</md:content-id>
    <md:uuid>b543b4c4-3a7a-46e9-b00c-d7d1b3d57d6b</md:uuid>
  </metadata>
  <content>
    <section id="sect-00001">
    <title>Learning objectives</title>
    <para id="para-00001">By the end of this section you should be able to</para>
    <list id="list-00001">
    <item>Use string indexing to access characters in the string.</item>
    <item>Use string slicing to get a substring from a string.</item>
    <item>Identify immutability characteristics of strings.</item>
    </list>
    </section>
    <section id="sect-00002">
    <title>String indexing</title>
    <para id="para-00002">A string is a type of sequence. A string is made up of a sequence of characters indexed from left to right, starting at 0. For a string variable <code class="python inline-code" lang="python">s</code>, the left-most character is indexed 0 and the right-most character is indexed <code class="python inline-code" lang="python">len(s) - 1</code>. Ex: The length of the string <code class="python inline-code" lang="python">"Cloud"</code> is 5, so the last index is 4.</para>
    <para id="para-00003">Negative indexing can also be used to refer to characters from right to left starting at -1. For a string variable <code class="python inline-code" lang="python">s</code>, the left-most character is indexed <code class="python inline-code" lang="python">-len(s)</code> and the right-most character is indexed -1. Ex: The length of the string <code class="python inline-code" lang="python">"flower"</code> is 6, so the index of the first character with negative indexing is -6.</para>
    <note class="guided-slides" id="note-00001">
    <title>String indexing</title>
    <media alt="string_indexing_slides">
    <iframe width="660" height="371.4" src="https://www.openstax.org/r/string-indexing"/>
    </media>
    </note>
    <note class="learning-questions" id="note-00002">
    <title>Accessing characters in a string using indexing</title>
    <exercise id="exer-00001">
    <problem id="prob-00001">
    <para id="para-00004"><link class="os-embed" url="#exercise/CPL-ch08-m02-p01"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00002">
    <problem id="prob-00002">
    <para id="para-00005"><link class="os-embed" url="#exercise/CPL-ch08-m02-p02"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00003">
    <problem id="prob-00003">
    <para id="para-00006"><link class="os-embed" url="#exercise/CPL-ch08-m02-p03"/></para>
    </problem>
    </exercise>
    </note>
    </section>
    <section id="sect-00003">
    <title>String slicing</title>
    <para id="para-00007"><term id="term-00001">String slicing</term> is used when a programmer must get access to a sequence of characters. Here, a string slicing operator can be used. When <code class="python inline-code" lang="python">[a:b]</code> is used with the name of a string variable, a sequence of characters starting from index <code class="python inline-code" lang="python">a</code> (inclusive) up to index <code class="python inline-code" lang="python">b</code> (exclusive) is returned. Both <code class="python inline-code" lang="python">a</code> and <code class="python inline-code" lang="python">b</code> are optional. If <code class="python inline-code" lang="python">a</code> or <code class="python inline-code" lang="python">b</code> are not provided, the default values are 0 and <code class="python inline-code" lang="python">len(string)</code>, respectively.</para>
    <example id="exam-00001">
    <title>Getting the minutes</title>
    <para id="para-00008">Consider a time value is given as <code class="python inline-code" lang="python">"hh:mm"</code> with <code class="python inline-code" lang="python">"hh"</code> representing the hour and <code class="python inline-code" lang="python">"mm"</code> representing the minutes. To retrieve only the string's minutes portion, the following code can be used:</para>
    <code class="python" lang="python">
    time_string = "13:46"
    minutes = time_string[3:5]
    print(minutes)</code>
    <para id="para-00009">The above code's output is:</para>
    <code>
    46</code>
    </example>
    <example id="exam-00002">
    <title>Getting the hour</title>
    <para id="para-00010">Consider a time value is given as <code class="python inline-code" lang="python">"hh:mm"</code> with <code class="python inline-code" lang="python">"hh"</code> representing the hour and <code class="python inline-code" lang="python">"mm"</code> representing the minutes. To retrieve only the string's hour portion, the following code can be used:</para>
    <code class="python" lang="python">
    time_string = "14:50"
    hour = time_string[:2]
    print(hour)</code>
    <para id="para-00011">The above code's output is:</para>
    <code>
    14</code>
    </example>
    <note class="learning-questions" id="note-00003">
    <title>Getting a substring using string slicing</title>
    <exercise id="exer-00004">
    <problem id="prob-00004">
    <para id="para-00012"><link class="os-embed" url="#exercise/CPL-ch08-m02-p04"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00005">
    <problem id="prob-00005">
    <para id="para-00013"><link class="os-embed" url="#exercise/CPL-ch08-m02-p05"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00006">
    <problem id="prob-00006">
    <para id="para-00014"><link class="os-embed" url="#exercise/CPL-ch08-m02-p06"/></para>
    </problem>
    </exercise>
    </note>
    </section>
    <section id="sect-00004">
    <title>String immutability</title>
    <para id="para-00015">String objects are <term id="term-00002">immutable</term> meaning that string objects cannot be modified or changed once created. Once a string object is created, the string's contents cannot be altered by directly modifying individual characters or elements within the string. Instead, to make changes to a string, a new string object with the desired changes is created, leaving the original string unchanged.</para>
    <note class="guided-slides" id="note-00004">
    <title>Strings are immutable</title>
    <media alt="strings_are_immutable_slides">
    <iframe width="660" height="371.4" src="https://www.openstax.org/r/strings-are-immutable"/>
    </media>
    </note>
    <note class="learning-questions" id="note-00005">
    <title>Modifying string content</title>
    <exercise id="exer-00007">
    <problem id="prob-00007">
    <para id="para-00016"><link class="os-embed" url="#exercise/CPL-ch08-m02-p07"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00008">
    <problem id="prob-00008">
    <para id="para-00017"><link class="os-embed" url="#exercise/CPL-ch08-m02-p08"/></para>
    </problem>
    </exercise>
    <exercise id="exer-00009">
    <problem id="prob-00009">
    <para id="para-00018"><link class="os-embed" url="#exercise/CPL-ch08-m02-p09"/></para>
    </problem>
    </exercise>
    </note>
    </section>
   
    <note class="practice-program" id="note-00006">
    <title>Changing the greeting message</title>
    <para id="para-00019">Given the string <code class="python inline-code" lang="python">"Hello my fellow
       classmates"</code> containing a greeting message, print the first word by getting the beginning of the string up to (and including) the 5th character. Change the first word in the string to <code class="python inline-code" lang="python">"Hi"</code> instead of <code class="python inline-code" lang="python">"hello"</code> and print the greeting message again.</para>
    <media alt="changing_the_greeting_message_program">
    <iframe width="660" height="371.4" src="../../media/interactive//coderunner/ch8/CodeRunner_08_03_03_Changing-the-greeting-message.html"/>
    </media>
    </note>
    <note class="practice-program" id="note-00007">
    <title>Editing the string at specified locations</title>
    <para id="para-00020">Given a string variable, <code class="python inline-code" lang="python">string_variable</code>, and a list of indexes, remove characters at the specified indexes and print the resulting string.</para>
    <code class="python" lang="python">
    Input:
    string_variable = "great"
    indices = [0, 1]</code>
    <code>
    Prints: 
    eat</code>
    <media alt="editing_the_string_at_specified_locations_program">
    <iframe width="660" height="371.4" src="../../media/interactive//coderunner/ch8/CodeRunner_08_03_04_Editing-the-string-at-specified-locations.html"/>
    </media>
    </note>
    </content>
</document>