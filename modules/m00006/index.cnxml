<document xmlns="http://cnx.rice.edu/cnxml">
  <title>Number basics</title>
  <metadata xmlns:md="http://cnx.rice.edu/mdml">
    <md:title>Number basics</md:title>
    <md:content-id>m00006</md:content-id>
    <md:uuid>6e60ad69-accd-4b81-95ed-73e10f84661e</md:uuid>
  </metadata>
  <content>
<section id="sect-00001">
<title>Learning objectives</title>
<list id="list-00001">
<item>Use arithmetic operators to perform calculations.</item>
<item>Explain the precedence of arithmetic operators.</item>
</list>
</section>
<section id="sect-00002">
<title>Numeric data types</title>
<para id="para-00001">Python has two basic numeric types, integer and floating-point. An integer type represents a whole number, and a floating-point type represents a decimal number.</para>
<note class="guided-slides" id="note-00001">
<title>Integer and floating-point</title>
<media alt="integer-and-floating-point_slides">
<iframe width="660" height="371.4" src="https://www.openstax.org/r/integer-and-floating-point"/>
</media>
</note>
<note class="learning-questions" id="note-00002">
<title>Integers, floats, and strings</title>
<para id="para-00002">Assume that <code class="python inline-code">x = 1</code>, <code class="python inline-code">y = 2.0</code>, and <code class="python inline-code">s = "32"</code>.</para>
<exercise id="exer-00001">
<problem id="prob-00001">
<para id="para-00003"><link class="os-embed" url="#exercise/CPL-ch01-m05-p01"/></para>
</problem>
</exercise>
<exercise id="exer-00002">
<problem id="prob-00002">
<para id="para-00004"><link class="os-embed" url="#exercise/CPL-ch01-m05-p02"/></para>
</problem>
</exercise>
<exercise id="exer-00003">
<problem id="prob-00003">
<para id="para-00005"><link class="os-embed" url="#exercise/CPL-ch01-m05-p03"/></para>
</problem>
</exercise>
</note>
</section>
<section id="sect-00003">
<title>Basic arithmetic</title>
<para id="para-00006"><term id="term-00001">Arithmetic operators</term> are used to perform mathematical operations like addition, subtraction, multiplication, and division.</para>
<para id="para-00007">4 basic arithmetic operators exist in Python:
<list list-type="enumerated" id="list-00002">
<item>Addition (+)</item>
<item>Subtraction (-)</item>
<item>Multiplication (*)</item>
<item>Division (/)</item>
</list></para>
<note class="guided-slides" id="note-00003">
<title>Examples of arithmetic operators</title>
<media alt="arithmetic_operators_slides">
<iframe width="660" height="371.4" src="https://www.openstax.org/r/arithmetic-operators"/>
</media>
</note>
<note class="learning-questions" id="note-00004">
<title>Applying arithmetic operators</title>
<para id="para-00008">Assume that <code class="python inline-code">x = 7</code>, <code class="python inline-code">y = 20</code>, and <code class="python inline-code">z = 2</code>.</para>
<exercise id="exer-00004">
<problem id="prob-00004">
<para id="para-00009"><link class="os-embed" url="#exercise/CPL-ch01-m05-p04"/></para>
</problem>
</exercise>
<exercise id="exer-00005">
<problem id="prob-00005">
<para id="para-00010"><link class="os-embed" url="#exercise/CPL-ch01-m05-p05"/></para>
</problem>
</exercise>
<exercise id="exer-00006">
<problem id="prob-00006">
<para id="para-00011"><link class="os-embed" url="#exercise/CPL-ch01-m05-p06"/></para>
</problem>
</exercise>
<exercise id="exer-00007">
<problem id="prob-00007">
<para id="para-00012"><link class="os-embed" url="#exercise/CPL-ch01-m05-p07"/></para>
</problem>
</exercise>
<exercise id="exer-00008">
<problem id="prob-00008">
<para id="para-00013"><link class="os-embed" url="#exercise/CPL-ch01-m05-p08"/></para>
</problem>
</exercise>
</note>
</section>
<section id="sect-00004">
<title>Operator precedence</title>
<para id="para-00014">When a calculation has multiple operators, each operator is evaluated In order of <term id="term-00002">precedence</term>. Ex: <code class="python inline-code">1 + 2 * 3</code> is <code class="python inline-code">7</code>, because multiplication takes precedence over addition. However, <code class="python inline-code">(1 + 2) * 3</code> is <code class="python inline-code">9</code>, because parentheses take precedence over multiplication.</para>
<table summary=" " id="table-00001">
<title>Operator precedence from highest to lowest</title>
<tgroup cols="4">
<thead>
<row>
<entry>Operator</entry>
<entry>Description</entry>
<entry>Example</entry>
<entry>Result</entry>
</row>
</thead>
<tbody>
<row>
<entry><code class="python inline-code">()</code></entry>
<entry>Parentheses</entry>
<entry><code class="python inline-code">(1 + 2) * 3</code></entry>
<entry><code class="python inline-code">9</code></entry>
</row>
<row>
<entry><code class="python inline-code">**</code></entry>
<entry>Exponentiation</entry>
<entry><code class="python inline-code">2 ** 4</code></entry>
<entry><code class="python inline-code">16</code></entry>
</row>
<row>
<entry><code class="python inline-code">+</code>, <code class="python inline-code">-</code></entry>
<entry>Positive, Negative</entry>
<entry><code class="python inline-code">-math.pi</code></entry>
<entry><code class="python inline-code">-3.14159</code></entry>
</row>
<row>
<entry><code class="python inline-code">*</code>, <code class="python inline-code">/</code></entry>
<entry>Multiplication, Division</entry>
<entry><code class="python inline-code">2 * 3</code></entry>
<entry><code class="python inline-code">6</code></entry>
</row>
<row>
<entry><code class="python inline-code">+</code>, <code class="python inline-code">-</code></entry>
<entry>Addition, Subtraction</entry>
<entry><code class="python inline-code">1 + 2</code></entry>
<entry><code class="python inline-code">3</code></entry>
</row>
</tbody>
</tgroup>
<caption/>
</table>
<note class="guided-slides" id="note-00005">
<title>Order of operations in an arithmetic expression</title>
<media alt="order_of_operations_slides">
<iframe width="660" height="371.4" src="https://www.openstax.org/r/order-of-operations"/>
</media>
</note>
<note class="learning-questions" id="note-00006">
<title>Multiple arithmetic operators</title>
<exercise id="exer-00009">
<problem id="prob-00009">
<para id="para-00015"><link class="os-embed" url="#exercise/CPL-ch01-m05-p09"/></para>
</problem>
</exercise>
<exercise id="exer-00010">
<problem id="prob-00010">
<para id="para-00016"><link class="os-embed" url="#exercise/CPL-ch01-m05-p10"/></para>
</problem>
</exercise>
<exercise id="exer-00011">
<problem id="prob-00011">
<para id="para-00017"><link class="os-embed" url="#exercise/CPL-ch01-m05-p11"/></para>
</problem>
</exercise>
<exercise id="exer-00012">
<problem id="prob-00012">
<para id="para-00018"><link class="os-embed" url="#exercise/CPL-ch01-m05-p12"/></para>
</problem>
</exercise>
</note>
</section>
<section id="sect-00005">
<title>Programming practice</title>
<note class="practice-program" id="note-00007">
<title>Values and types</title>
<para id="para-00019">Write a Python computer program that:
<list list-type="enumerated" id="list-00003">
<item>Defines an integer variable named 'int_a' and assign 'int_a' with the value 10.</item>
<item>Defines a floating-point variable named 'float_a' and assign 'float_a' with the value 10.0.</item>
<item>Defines a string variable named 'string_a' and assign 'string_a' with the string value "10".</item>
<item>Prints the value of each of the three variables along with their type.</item>
</list></para>
<media alt="values_and_types_program">
<iframe width="660" height="371.4" src="../../media/interactive/coderunner/ch1/CodeRunner_01_06_07_Values-and-types.html"/>
</media>
</note>
<note class="practice-program" id="note-00008">
<title>Meters to feet</title>
<para id="para-00020">Write a Python computer program that:
<list list-type="enumerated" id="list-00004">
<item>Assigns the integer value 10 to a variable, meters.</item>
<item>Assigns the floating-point value 3.28 to a variable, meter2feet.</item>
<item>Calculates 10 meters in feet by multiplying meter by meter2feet. Store the result in a variable, feet.</item>
<item>Prints the content of variable feet in the output.</item>
</list></para>
<media alt="meters_to_feet_program">
<iframe width="660" height="371.4" src="../../media/interactive/coderunner/ch1/CodeRunner_01_06_08_Meters-to-feet.html"/>
</media>
</note>
</section>
</content>
</document>