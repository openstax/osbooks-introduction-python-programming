{
  "UI": {
    "showSolutionButton": "Show solution",
    "tryAgainButton": "Retry",
    "checkAnswerButton": "Check",
    "tipsLabel": "Show tip",
    "scoreBarLabel": "You got :num out of :total points",
    "tipAvailable": "Tip available",
    "feedbackAvailable": "Feedback available",
    "readFeedback": "Read feedback",
    "wrongAnswer": "Wrong answer",
    "correctAnswer": "Correct answer",
    "shouldCheck": "Should have been checked",
    "shouldNotCheck": "Should not have been checked",
    "noInput": "Please answer before viewing the solution"
  },
  "behaviour": {
    "enableRetry": true,
    "enableSolutionsButton": true,
    "singlePoint": true,
    "randomAnswers": true,
    "showSolutionsRequiresInput": true,
    "type": "auto",
    "confirmCheckDialog": false,
    "confirmRetryDialog": false,
    "autoCheck": false,
    "passPercentage": 100,
    "showScorePoints": true,
    "enableCheckButton": true
  },
  "overallFeedback": [
    {
      "from": 0,
      "to": 0,
      "feedback": "Wrong"
    },
    {
      "from": 1,
      "to": 99,
      "feedback": "Almost!"
    },
    {
      "from": 100,
      "to": 100,
      "feedback": "Correct!"
    }
  ],
  "question": "Which program stores and retrieves a variable correctly?",
  "isSolutionPublic": true,
  "isFreeResponseSupported": false,
  "answers": [
    {
      "text": "<code class=\"python\">print(\"Total = \", total)</code><br>\n<code class=\"python\">total = 6</code>\n",
      "correct": false,
      "tipsAndFeedback": {
        "tip": "",
        "chosenFeedback": " The variable, total, is not created until it is assigned the value with the input() function. So, the first assignment would produce an error. ",
        "notChosenFeedback": ""
      }
    },
    {
      "text": "<code class=\"python\">total = 6</code><br>\n<code class=\"python\">print(\"Total = \", total)</code>\n",
      "correct": false,
      "tipsAndFeedback": {
        "tip": "",
        "chosenFeedback": " The variable, total, is not created until it is assigned the value, 6. So, the print() statement would produce an error. ",
        "notChosenFeedback": ""
      }
    },
    {
      "text": "<code class=\"python\">print(\"Total = \", total)</code><br>\n<code class=\"python\">total = input()</code>",
      "correct": true,
      "tipsAndFeedback": {
        "tip": "",
        "chosenFeedback": " These two lines of code would produce the output string, \"Total = 6\". ",
        "notChosenFeedback": ""
      }
    }
  ],
  "subContentId": "c07db1c8-b98c-4a35-9f3c-907d0bff1213"
}