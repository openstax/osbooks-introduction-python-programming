{
  "UI": {
    "showSolutionButton": "Show solution",
    "tryAgainButton": "Retry",
    "checkAnswerButton": "Check",
    "tipsLabel": "Show tip",
    "scoreBarLabel": "You got :num out of :total points",
    "tipAvailable": "Tip available",
    "feedbackAvailable": "Feedback available",
    "readFeedback": "Read feedback",
    "wrongAnswer": "Wrong answer",
    "correctAnswer": "Correct answer",
    "shouldCheck": "Should have been checked",
    "shouldNotCheck": "Should not have been checked",
    "noInput": "Please answer before viewing the solution"
  },
  "behaviour": {
    "enableRetry": true,
    "enableSolutionsButton": true,
    "singlePoint": true,
    "randomAnswers": true,
    "showSolutionsRequiresInput": true,
    "type": "auto",
    "confirmCheckDialog": false,
    "confirmRetryDialog": false,
    "autoCheck": false,
    "passPercentage": 100,
    "showScorePoints": true,
    "enableCheckButton": true
  },
  "overallFeedback": [
    {
      "from": 0,
      "to": 0,
      "feedback": "Wrong"
    },
    {
      "from": 1,
      "to": 99,
      "feedback": "Almost!"
    },
    {
      "from": 100,
      "to": 100,
      "feedback": "Correct!"
    }
  ],
  "question": "<pre class=\"python\" lang=\"python\">word = \"one\"\ntry:\n&nbsp;&nbsp;number = int(word)\n&nbsp;&nbsp;print(word, \"equals\", number)\nexcept IndexError:\n&nbsp;&nbsp;print(word, \"is not a number\")\n</pre>",
  "isSolutionPublic": true,
  "isFreeResponseSupported": false,
  "answers": [
    {
      "text": "<code class=\"python\" lang=\"python\">one equals 1</code>",
      "correct": false,
      "tipsAndFeedback": {
        "tip": "",
        "chosenFeedback": "The except clause runs only when IndexError is raised, not ValueError.",
        "notChosenFeedback": ""
      }
    },
    {
      "text": "<code class=\"python\" lang=\"python\">one is not a number</code>",
      "correct": false,
      "tipsAndFeedback": {
        "tip": "",
        "chosenFeedback": "The int() function does not automatically convert words to numbers.",
        "notChosenFeedback": ""
      }
    },
    {
      "text": "<code class=\"python\" lang=\"python\">ValueError: invalid literal for int() with base 10: 'one'</code>",
      "correct": true,
      "tipsAndFeedback": {
        "tip": "",
        "chosenFeedback": "The program crashes and displays this error because the except clause does not handle <code class=\"python\" lang=\"python\">ValueError</code>.",
        "notChosenFeedback": ""
      }
    }
  ],
  "subContentId": "388c28c7-702b-48a4-9b79-b4c32b43766b",
  "detailedSolution": "The program crashes and displays this error because the except clause does not handle <code class=\"python\" lang=\"python\">ValueError</code>."
}